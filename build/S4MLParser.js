/*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */
(function(root) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.location = location;
    this.name     = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function(expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
          literal: function(expectation) {
            return "\"" + literalEscape(expectation.text) + "\"";
          },

          "class": function(expectation) {
            var escapedParts = "",
                i;

            for (i = 0; i < expectation.parts.length; i++) {
              escapedParts += expectation.parts[i] instanceof Array
                ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
                : classEscape(expectation.parts[i]);
            }

            return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
          },

          any: function(expectation) {
            return "any character";
          },

          end: function(expectation) {
            return "end of input";
          },

          other: function(expectation) {
            return expectation.description;
          }
        };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/"/g,  '\\"')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function classEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/\]/g, '\\]')
        .replace(/\^/g, '\\^')
        .replace(/-/g,  '\\-')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i, j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }
        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ")
            + ", or "
            + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== void 0 ? options : {};

    var peg$FAILED = {},

        peg$startRuleFunctions = { start: peg$parsestart },
        peg$startRuleFunction  = peg$parsestart,

        peg$c0 = peg$otherExpectation("Declaration"),
        peg$c1 = "\\text{Let}",
        peg$c2 = peg$literalExpectation("\\text{Let}", false),
        peg$c3 = function(newVarName, affectationOperator, mathObjAffected) {

           const processedMathLineInput = options.processedMathLineInput;

           // if newvarName is a Function Identifier
           if (typeof (newVarName) === typeof ([])) {
              let funcVar = newVarName.functionVar;
              newVarName = newVarName.functionName
           }

           const newMemoryElement = {
              declaringMathLineInput: processedMathLineInput,
              S4MLVarName: newVarName,
              varValue: (affectationOperator === "=" ? mathObjAffected : "elof(" + mathObjAffected + ")"),
              processedVarValue: new MathObj(),
           };

           console.log(newMemoryElement);

           g_s4mCoreMemory.setVar(newMemoryElement);
           processedMathLineInput.signalNoError();

           return "";
        },
        peg$c4 = function(varName) {
              const processedMathLineInput = options.processedMathLineInput;

              // check if var is not already defined
              if (g_s4mCoreMemory.hasAVarNamed(varName)
                 && g_s4mCoreMemory.getMathLineInputWhichDeclared(varName) !== processedMathLineInput) {

                 throw {
                    name: "DeclarationError",
                    message: "Variable [" + varName + "] is already defined."
                 };
              }

              return (varName); 
         },
        peg$c5 = function(varName) {
              const processedMathLineInput = options.processedMathLineInput;

              // check if var is already defined
              // if (!(
              //       g_s4mCoreMemory.hasAVarNamed(varName)
              //       && g_s4mCoreMemory.getMathLineInputWhichDeclared(varName) !== processedMathLineInput)) {

              //       throw {
              //          name: "VarError",
              //          message: "Variable [" + varName + "] is undefined."
              //       };
              // }

              return (varName); 
         },
        peg$c6 = "=",
        peg$c7 = peg$literalExpectation("=", false),
        peg$c8 = "\\in",
        peg$c9 = peg$literalExpectation("\\in", false),
        peg$c10 = function(expr1, operator, expr2) {
            return expr1 + operator + expr2;
         },
        peg$c11 = "\\left(",
        peg$c12 = peg$literalExpectation("\\left(", false),
        peg$c13 = "\\right)",
        peg$c14 = peg$literalExpectation("\\right)", false),
        peg$c15 = function(equationBasic) {
            return equationBasic;
         },
        peg$c16 = "\\text{Given}",
        peg$c17 = peg$literalExpectation("\\text{Given}", false),
        peg$c18 = function(statement) {
         },
        peg$c19 = peg$anyExpectation(),
        peg$c20 = function(value) { 
              return (value.join('')); 
         },
        peg$c21 = function(head, tail) {
              return tail.reduce((result, element) => {
                 return (result + element[1] + element[3]);
              }, head);
         },
        peg$c22 = function(sign, term) {
              return (sign !== null ? sign : '') + term;
         },
        peg$c23 = function(head, tail) {
              return tail.reduce((result, element) => {
                 return result + element[1] + element[3];
              }, head);
         },
        peg$c24 = function(operator, expression) {
              return (operator + "(" + expression + ")")
         },
        peg$c25 = "\\sqrt{",
        peg$c26 = peg$literalExpectation("\\sqrt{", false),
        peg$c27 = "}",
        peg$c28 = peg$literalExpectation("}", false),
        peg$c29 = function(expression) {
              return "sqrt(" + expression + ")";   
          },
        peg$c30 = "\\partial",
        peg$c31 = peg$literalExpectation("\\partial", false),
        peg$c32 = "_",
        peg$c33 = peg$literalExpectation("_", false),
        peg$c34 = function(varRef, expression) {
              return "diff(" + expression + ", " + varRef + ", 1)";
          },
        peg$c35 = "_{",
        peg$c36 = peg$literalExpectation("_{", false),
        peg$c37 = "}\\left(",
        peg$c38 = peg$literalExpectation("}\\left(", false),
        peg$c39 = "^",
        peg$c40 = peg$literalExpectation("^", false),
        peg$c41 = function(varRef, level, expression) {
              return "diff(" + expression + ", " + varRef + ", " + level + ")";
          },
        peg$c42 = "}^",
        peg$c43 = peg$literalExpectation("}^", false),
        peg$c44 = "^{",
        peg$c45 = peg$literalExpectation("^{", false),
        peg$c46 = "}^{",
        peg$c47 = peg$literalExpectation("}^{", false),
        peg$c48 = "\\frac{\\partial",
        peg$c49 = peg$literalExpectation("\\frac{\\partial", false),
        peg$c50 = "",
        peg$c51 = "}{\\partial",
        peg$c52 = peg$literalExpectation("}{\\partial", false),
        peg$c53 = function(topLevel, varTopName, bottomLevel, varBottomName) {
              if (parseInt(topLevel) !== parseInt(bottomLevel)) {
                 throw {name: "Syntax Error", message: "You need to put the same degree of derivation up and down. The syntax you used is not managed yet..." }
              }
             
              return "diff(" + varTopName + ", " + varBottomName + ", " + topLevel + ")";
          },
        peg$c54 = "\\left(\\frac{\\partial",
        peg$c55 = peg$literalExpectation("\\left(\\frac{\\partial", false),
        peg$c56 = "}\\right)^",
        peg$c57 = peg$literalExpectation("}\\right)^", false),
        peg$c58 = function(varBottomName, level, varTopName) {
              return "diff(" + varTopName + ", " + varBottomName + ", " + level + ")";
          },
        peg$c59 = "}\\right)^{",
        peg$c60 = peg$literalExpectation("}\\right)^{", false),
        peg$c61 = function(topLevel, bottomLevel, varRef, expression) {
              if (parseInt(topLevel) !== parseInt(bottomLevel)) {
                 throw {name: "Syntax Error", message: "You need to put the same degree of derivation up and down. The syntax you used is not managed yet..." }
              }

              return "diff(" + expression + ", " + varRef + ", " + topLevel + ")";
          },
        peg$c62 = "}}{\\partial",
        peg$c63 = peg$literalExpectation("}}{\\partial", false),
        peg$c64 = "}\\right)\\left(",
        peg$c65 = peg$literalExpectation("}\\right)\\left(", false),
        peg$c66 = "\\log_",
        peg$c67 = peg$literalExpectation("\\log_", false),
        peg$c68 = function(base, expression) {
              return "log(" + expression+ ")/log(" + base + ")";
          },
        peg$c69 = "\\log_{",
        peg$c70 = peg$literalExpectation("\\log_{", false),
        peg$c71 = "\\operatorname{atan}_2\\left(",
        peg$c72 = peg$literalExpectation("\\operatorname{atan}_2\\left(", false),
        peg$c73 = ",",
        peg$c74 = peg$literalExpectation(",", false),
        peg$c75 = function(xValue, yValue) {
              return "atan2(" + xValue + "," + yValue +")" 
          },
        peg$c76 = "\\operatorname{solve}\\left(",
        peg$c77 = peg$literalExpectation("\\operatorname{solve}\\left(", false),
        peg$c78 = function(varName, equation) {
              nerdamer.set('SOLUTIONS_AS_OBJECT', true);
              const answersStr = [];
              const answersArray = [];

              const answersObjArray = nerdamer('solve(' + equation + ', ' + varName + ')').symbol.elements;

              for (const answer of answersObjArray) {
                 answersStr.push(nerdamer(answer).toString());
              }

              answersArray.push('\\left[' + answersStr.map((exp) => nerdamer.convertToLaTeX(exp)).join('\\ \\ ,\\ \\ ') + '\\right]');
              answersArray.push('\\left[' + answersStr.map((exp) => nerdamer.convertToLaTeX(nerdamer(exp).evaluate().toString())).join('\\ \\ ,\\ \\ ') + '\\right]');
              answersArray.push('\\left[' + answersStr.map((exp) => nerdamer.convertToLaTeX(nerdamer(exp).evaluate().text('decimals', 50), {decimals: true})).join('\\ \\ ,\\ \\ ') + '\\right]');

              displayMessageOnOutputScreen('\\text{solve}\\left(' + varName + '\\ \\ |\\\ \\ \\left(' + nerdamer.convertToLaTeX(equation) + '\\right)\\ \\right)', answersArray);

              return '[Unprocess]';
          },
        peg$c79 = "\\operatorname{solve}\\left(\\left[",
        peg$c80 = peg$literalExpectation("\\operatorname{solve}\\left(\\left[", false),
        peg$c81 = "\\right]\\right)",
        peg$c82 = peg$literalExpectation("\\right]\\right)", false),
        peg$c83 = function(firstEquation, followingEquations) {

              nerdamer.set('SOLUTIONS_AS_OBJECT', true);

              let equationsArray = [firstEquation].concat(followingEquations.map((el) => el[1]));
              console.log(equationsArray.join(','));
           
              const answerObj = nerdamer('solveEquations([ ' + equationsArray.join(',') + '])');
              console.log(answerObj.symbol);
              // const answersArray = [];
              // const varValuesArray = [];

              //faut faire un objet genre Answers['x']=[v1, v2, v3], Answers['y'] = [v4, v5, v6], etc
              //ou v1 v2 v3 c'est genre nerdamer(), evaluate et text()
              //comme ca apres on les push dans l'array de reponse et on l'affiche
              //test avec \operatorname{solve}\left(\left[x^2+y^2=42,\ \frac{x^2}{y}=7\right]\right)
              //je vais dodo bn

              // let tempObj = {}
              // for (const varName in answerObj.symbol) {
              //    tempObj[varName] = [answerObj.symbol[varName], nerdamer(answerObj.symbol[varName]).evaluate(), nerdamer(answerObj.symbol[varName]).evaluate().text('decimals', 50)];
              //    varValuesArray.push(tempObj);
              //    tempObj = {};
              // }

              // const variablesArray = varValuesArray.map(obj => Object.keys(obj));
              // const nerdamerAnswer = '\\left[';
              // const evaluatedAnswer = '\\left[';
              // const textAnswer = '\\left[';

              // for (const varName of variablesArray) {
              //    nerdamerAnswer += 'nerdamerAnswer'; 
              //    evaluatedAnswer = 
              // }

              // answersArray.push('\\left[' + ().join(',') + '\\right]');
              // answersArray.push('\\left[' + varValuesArray.map((obj) => nerdamer.convertToLaTeX(el)).join('\\ \\ ,\\ \\ ') + '\\right]');
              // answersArray.push('\\left[' + varValuesArray.map((el) => nerdamer.convertToLaTeX(el.evaluate().toString())).join('\\ \\ ,\\ \\ ') + '\\right]');
              // answersArray.push('\\left[' + varValuesArray.map((el) => nerdamer.convertToLaTeX(el.evaluate().toString())).join('\\ \\ ,\\ \\ ') + '\\right]');

              // displayMessageOnOutputScreen('\\text{solve}\\left(\\left(' + equationsArray.map((el) => nerdamer.convertToLaTeX(el)).join('\\right)\\ \\ ,\\ \\ \\left(') + '\\right)\\right)', answersArray);

              return '[Unprocess]';

              // return "solveEquations([" + equationsArray.join(',') + "])"
          },
        peg$c84 = "\\operatorname{polarForm}\\left(",
        peg$c85 = peg$literalExpectation("\\operatorname{polarForm}\\left(", false),
        peg$c86 = function(expression) {
              return "polarform(" + expression + ")";
          },
        peg$c87 = "\\operatorname{cartForm}\\left(",
        peg$c88 = peg$literalExpectation("\\operatorname{cartForm}\\left(", false),
        peg$c89 = function(expression) {
              return "rectform(" + expression + ")";
          },
        peg$c90 = "\\operatorname{expand}",
        peg$c91 = peg$literalExpectation("\\operatorname{expand}", false),
        peg$c92 = function(expression) {
              return "expand(" + expression + ")";
          },
        peg$c93 = "\\Re\\left(",
        peg$c94 = peg$literalExpectation("\\Re\\left(", false),
        peg$c95 = function(expression) {
              return "realpart(" + expression + ")";
          },
        peg$c96 = "\\Im\\left(",
        peg$c97 = peg$literalExpectation("\\Im\\left(", false),
        peg$c98 = function(expression) {
              return "imagpart(" + expression + ")";
          },
        peg$c99 = "\\min\\left(",
        peg$c100 = peg$literalExpectation("\\min\\left(", false),
        peg$c101 = function(firstExpression, followingExpressionsCapture) {
             const followingExpressions = followingExpressionsCapture.map(array => array[1]);
             const args = [firstExpression].concat(followingExpressions);

              return "min(" + args.join(',') + ")";
          },
        peg$c102 = "\\max\\left(",
        peg$c103 = peg$literalExpectation("\\max\\left(", false),
        peg$c104 = function(firstExpression, followingExpressionsCapture) {
             const followingExpressions = followingExpressionsCapture.map(array => array[1]);
             const args = [firstExpression].concat(followingExpressions);

              return "max(" + args.join(',') + ")";
          },
        peg$c105 = "\\left|",
        peg$c106 = peg$literalExpectation("\\left|", false),
        peg$c107 = "\\right|",
        peg$c108 = peg$literalExpectation("\\right|", false),
        peg$c109 = function(expression) {
              return "abs(" + expression + ")";
          },
        peg$c110 = "\\lfloor",
        peg$c111 = peg$literalExpectation("\\lfloor", false),
        peg$c112 = " ",
        peg$c113 = peg$literalExpectation(" ", false),
        peg$c114 = "\\rfloor",
        peg$c115 = peg$literalExpectation("\\rfloor", false),
        peg$c116 = function(expression) {
              return "floor(" + expression + ")";
          },
        peg$c117 = "\\lceil",
        peg$c118 = peg$literalExpectation("\\lceil", false),
        peg$c119 = "\\rceil",
        peg$c120 = peg$literalExpectation("\\rceil", false),
        peg$c121 = function(expression) {
              return "ceil(" + expression + ")";
          },
        peg$c122 = "\\operatorname{simplify}\\left(",
        peg$c123 = peg$literalExpectation("\\operatorname{simplify}\\left(", false),
        peg$c124 = function(expression) {
              return "simplify(" + expression + ")";
          },
        peg$c125 = "\\text{Si}\\left(",
        peg$c126 = peg$literalExpectation("\\text{Si}\\left(", false),
        peg$c127 = function(expression) {
              return ('Si(' + expression + ')');
          },
        peg$c128 = "\\text{Ci}\\left(",
        peg$c129 = peg$literalExpectation("\\text{Ci}\\left(", false),
        peg$c130 = function(expression) {
              return ('Ci(' + expression + ')');
          },
        peg$c131 = "\\text{Ei}\\left(",
        peg$c132 = peg$literalExpectation("\\text{Ei}\\left(", false),
        peg$c133 = function(expression) {
              return ('Ei(' + expression + ')');
          },
        peg$c134 = "\\text{rect}\\left(",
        peg$c135 = peg$literalExpectation("\\text{rect}\\left(", false),
        peg$c136 = function(expression) {
              return ('rect(' + expression + ')');
          },
        peg$c137 = "\\Pi\\left(",
        peg$c138 = peg$literalExpectation("\\Pi\\left(", false),
        peg$c139 = "\\text{step}\\left(",
        peg$c140 = peg$literalExpectation("\\text{step}\\left(", false),
        peg$c141 = function(expression) {
              return ('step(' + expression + ')');
          },
        peg$c142 = "\\text{erf}\\left(",
        peg$c143 = peg$literalExpectation("\\text{erf}\\left(", false),
        peg$c144 = function(expression) {
              return ('erf(' + expression + ')');
          },
        peg$c145 = "\\operatorname{factor}\\left(",
        peg$c146 = peg$literalExpectation("\\operatorname{factor}\\left(", false),
        peg$c147 = function(number) {
              return "pfactor(" + number + ")";
          },
        peg$c148 = "!",
        peg$c149 = peg$literalExpectation("!", false),
        peg$c150 = function(value) {
              return "fact(" + value + ")";
          },
        peg$c151 = "\\operatorname{sign}\\left(",
        peg$c152 = peg$literalExpectation("\\operatorname{sign}\\left(", false),
        peg$c153 = function(expression) {
              return "sign(" + expression + ")";
          },
        peg$c154 = "\\operatorname{round}\\left(",
        peg$c155 = peg$literalExpectation("\\operatorname{round}\\left(", false),
        peg$c156 = function(expression) {
              return "round(" + expression + ")";
          },
        peg$c157 = "\\operatorname{fib}\\left(",
        peg$c158 = peg$literalExpectation("\\operatorname{fib}\\left(", false),
        peg$c159 = function(number) {
              return "fib(" + number + ")";
          },
        peg$c160 = "\\operatorname{CF}\\left(",
        peg$c161 = peg$literalExpectation("\\operatorname{CF}\\left(", false),
        peg$c162 = "raw",
        peg$c163 = peg$literalExpectation("raw", false),
        peg$c164 = function(expression) {

              const answer = nerdamer('continued_fraction(' + expression + ')').toString();
              let retStr = '';

              if (answer.match(/\[[-]?[0-9]+,[0-9]+,\[[0-9]*(,[0-9]+)*\]\]/g)) {
                 retStr = answer;
              } else {
                 retStr = '\\text{CF}\\left(' + nerdamer.convertToLaTeX(nerdamer('simplify(' + expression + ')').toString()) + ',\\ raw\\right)';
              }

              displayMessageOnOutputScreen('\\text{CF}\\left(' + expression + ',\\ raw\\right)', [retStr]);
              return '[Unprocess]';
          },
        peg$c165 = function(expression) {
              // take the result of nerdamer instruction, like [1, 3, [4, 5, 6, 7]], and display 3+1/(4+1/(5+1/(6+1/(7))))
              const question = 'continued_fraction(' + expression + ')';
              const resultStr = nerdamer(question).toString();
              let retStr = '';

              // if the nerdamer answer is a processed answer, that is if it has a pattern like "[1, 2, [3, 4, 5]]" and not just "continued_fraction(expression)"
              if (resultStr.match(/\[[-]?[0-9]+,[0-9]+,\[[0-9]*(,[0-9]+)*\]\]/g)) {
                 const resultArray = resultStr.substring(1, resultStr.length - 1).split(',');
                 const signInt = parseInt(resultArray[0]);
                 const firstInt = signInt * parseInt(resultArray[1]);

                 retStr = '' + firstInt;

                 //if the expression passed as argument is not just an integer
                 if (resultArray[2] !== "[]") {
                    const followingInts = resultStr.substring(1, resultStr.length - 2).split('[')[1].split(',').map(intStr => parseInt(intStr))

                    for (let followingInt of followingInts) {
                       retStr += '+1/(' + (signInt * followingInt);
                    }

                    for (let followingInt of followingInts) {
                       retStr += ')';
                    }

                    retStr = nerdamer.convertToLaTeX(retStr);
                    const numericalValue = nerdamer(expression);
                    displayMessageOnOutputScreen('\\text{CF}(' + expression + ')', [retStr, nerdamer.convertToLaTeX(numericalValue.toString()), numericalValue.text('decimals')]);
                 } else {
                    displayMessageOnOutputScreen('\\text{CF}(' + expression + ')', [retStr]);
                 }         
              } else {
                 retStr = '\\text{CF}\\left(' + nerdamer.convertToLaTeX(nerdamer('simplify(' + expression + ')').toString()) + '\\right)';
                 displayMessageOnOutputScreen('\\text{CF}\\left(' + expression + '\\right)', [retStr]);
              }
              
              return "[Unprocess]";
          },
        peg$c166 = "\\operatorname{PF}\\left(",
        peg$c167 = peg$literalExpectation("\\operatorname{PF}\\left(", false),
        peg$c168 = function(expression) {
             return "partfrac(" + expression +")";
          },
        peg$c169 = function(expression, varName) {
             return "partfrac(" + expression +", " + varName +")";
          },
        peg$c170 = "\\operatorname{line}\\left(\\left(",
        peg$c171 = peg$literalExpectation("\\operatorname{line}\\left(\\left(", false),
        peg$c172 = "\\right),\\left(",
        peg$c173 = peg$literalExpectation("\\right),\\left(", false),
        peg$c174 = "\\right)\\right)",
        peg$c175 = peg$literalExpectation("\\right)\\right)", false),
        peg$c176 = function(x1, y1, x2, y2) {
              return "line([" + x1 + "," + y1 + "], [" + x2 + "," + y2 + "])";
          },
        peg$c177 = "\\sum_{",
        peg$c178 = peg$literalExpectation("\\sum_{", false),
        peg$c179 = function(counter, startValue, endValue, expression) {
             return "sum(" + expression + ", " + counter + ", " + startValue + ", " + endValue + ")";
          },
        peg$c180 = "\\prod_{",
        peg$c181 = peg$literalExpectation("\\prod_{", false),
        peg$c182 = function(counter, startValue, endValue, expression) {
             return "product(" + expression + ", " + counter + ", " + startValue + ", " + endValue + ")";
          },
        peg$c183 = "\\lim_{",
        peg$c184 = peg$literalExpectation("\\lim_{", false),
        peg$c185 = "\\rightarrow",
        peg$c186 = peg$literalExpectation("\\rightarrow", false),
        peg$c187 = function(varName, limit, expression) {
             return "limit(" + expression + ", " + varName + ", " + limit +  ")";
          },
        peg$c188 = "+",
        peg$c189 = peg$literalExpectation("+", false),
        peg$c190 = "-",
        peg$c191 = peg$literalExpectation("-", false),
        peg$c192 = "\\infty}\\left(",
        peg$c193 = peg$literalExpectation("\\infty}\\left(", false),
        peg$c194 = function(varName, sign, expression) {
             if (sign === null) {
                sign = '';
             }
             
             return "limit(" + expression + ", " + varName + ", " + sign + "Infinity)";
          },
        peg$c195 = "\\int",
        peg$c196 = peg$literalExpectation("\\int", false),
        peg$c197 = "\\right)\\text{d}",
        peg$c198 = peg$literalExpectation("\\right)\\text{d}", false),
        peg$c199 = function(expression, varName) {
             return "integrate(" + expression + ", " + varName + ")";
          },
        peg$c200 = "\\right)\\text{d}{",
        peg$c201 = peg$literalExpectation("\\right)\\text{d}{", false),
        peg$c202 = "{",
        peg$c203 = peg$literalExpectation("{", false),
        peg$c204 = function(down, up, expression, varName) {
             return "defint(" + expression + ", " + down+ ", " + up + ", " + varName +")";
          },
        peg$c205 = "\\operatorname{lcm}\\left(",
        peg$c206 = peg$literalExpectation("\\operatorname{lcm}\\left(", false),
        peg$c207 = function(v1, v2) {
             return "lcm(" + v1 + "," + v2 + ")";
          },
        peg$c208 = "\\gcd\\left(",
        peg$c209 = peg$literalExpectation("\\gcd\\left(", false),
        peg$c210 = function(v1, v2) {
             return "gcd(" + v1 + "," + v2 + ")";
          },
        peg$c211 = "\\deg\\left(",
        peg$c212 = peg$literalExpectation("\\deg\\left(", false),
        peg$c213 = function(expression) {
             return "deg(" + expression +")";
          },
        peg$c214 = function(deposedFuncName, expression) {
              return deposedFuncName + "(" + expression + ")";
          },
        peg$c215 = "\\operatorname{acosH}",
        peg$c216 = peg$literalExpectation("\\operatorname{acosH}", false),
        peg$c217 = function() { return "acosh" },
        peg$c218 = "\\operatorname{asinH}",
        peg$c219 = peg$literalExpectation("\\operatorname{asinH}", false),
        peg$c220 = function() { return "asinh" },
        peg$c221 = "\\operatorname{atanH}",
        peg$c222 = peg$literalExpectation("\\operatorname{atanH}", false),
        peg$c223 = function() { return "atanh" },
        peg$c224 = "\\operatorname{asecH}",
        peg$c225 = peg$literalExpectation("\\operatorname{asecH}", false),
        peg$c226 = function() { return "asech" },
        peg$c227 = "\\operatorname{acosecH}",
        peg$c228 = peg$literalExpectation("\\operatorname{acosecH}", false),
        peg$c229 = function() { return "acsch" },
        peg$c230 = "\\operatorname{acotanH}",
        peg$c231 = peg$literalExpectation("\\operatorname{acotanH}", false),
        peg$c232 = function() { return "acoth" },
        peg$c233 = "\\operatorname{cosH}",
        peg$c234 = peg$literalExpectation("\\operatorname{cosH}", false),
        peg$c235 = function() { return "cosh" },
        peg$c236 = "\\operatorname{sinH}",
        peg$c237 = peg$literalExpectation("\\operatorname{sinH}", false),
        peg$c238 = function() { return "sinh" },
        peg$c239 = "\\operatorname{tanH}",
        peg$c240 = peg$literalExpectation("\\operatorname{tanH}", false),
        peg$c241 = function() { return "tanh" },
        peg$c242 = "\\operatorname{secH}",
        peg$c243 = peg$literalExpectation("\\operatorname{secH}", false),
        peg$c244 = function() { return "sech" },
        peg$c245 = "\\operatorname{cosecH}",
        peg$c246 = peg$literalExpectation("\\operatorname{cosecH}", false),
        peg$c247 = function() { return "csch" },
        peg$c248 = "\\operatorname{cotanH}",
        peg$c249 = peg$literalExpectation("\\operatorname{cotanH}", false),
        peg$c250 = function() { return "coth" },
        peg$c251 = "\\operatorname{acotan}",
        peg$c252 = peg$literalExpectation("\\operatorname{acotan}", false),
        peg$c253 = function() { return "acot" },
        peg$c254 = "\\operatorname{cotan}",
        peg$c255 = peg$literalExpectation("\\operatorname{cotan}", false),
        peg$c256 = function() { return "cot" },
        peg$c257 = "\\operatorname{atan}",
        peg$c258 = peg$literalExpectation("\\operatorname{atan}", false),
        peg$c259 = function() { return "atan" },
        peg$c260 = "\\operatorname{factor}",
        peg$c261 = peg$literalExpectation("\\operatorname{factor}", false),
        peg$c262 = function() { return "factor" },
        peg$c263 = "\\operatorname{asec}",
        peg$c264 = peg$literalExpectation("\\operatorname{asec}", false),
        peg$c265 = function() { return "asec" },
        peg$c266 = "\\operatorname{Shi}",
        peg$c267 = peg$literalExpectation("\\operatorname{Shi}", false),
        peg$c268 = function() { return "Shi" },
        peg$c269 = "\\operatorname{Chi}",
        peg$c270 = peg$literalExpectation("\\operatorname{Chi}", false),
        peg$c271 = function() { return "Chi" },
        peg$c272 = "\\tan",
        peg$c273 = peg$literalExpectation("\\tan", false),
        peg$c274 = function() { return "tan" },
        peg$c275 = "\\operatorname{asin}",
        peg$c276 = peg$literalExpectation("\\operatorname{asin}", false),
        peg$c277 = function() { return "asin" },
        peg$c278 = "\\sin",
        peg$c279 = peg$literalExpectation("\\sin", false),
        peg$c280 = function() { return "sin" },
        peg$c281 = "\\operatorname{acosec}",
        peg$c282 = peg$literalExpectation("\\operatorname{acosec}", false),
        peg$c283 = function() { return "acsc" },
        peg$c284 = "\\operatorname{cosec}",
        peg$c285 = peg$literalExpectation("\\operatorname{cosec}", false),
        peg$c286 = function() { return "csc" },
        peg$c287 = "\\operatorname{roots}",
        peg$c288 = peg$literalExpectation("\\operatorname{roots}", false),
        peg$c289 = function() { return "roots" },
        peg$c290 = "\\sec",
        peg$c291 = peg$literalExpectation("\\sec", false),
        peg$c292 = function() { return "sec" },
        peg$c293 = "\\operatorname{acos}",
        peg$c294 = peg$literalExpectation("\\operatorname{acos}", false),
        peg$c295 = function() { return "acos" },
        peg$c296 = "\\cos",
        peg$c297 = peg$literalExpectation("\\cos", false),
        peg$c298 = function() { return "cos" },
        peg$c299 = "\\ln",
        peg$c300 = peg$literalExpectation("\\ln", false),
        peg$c301 = function() { return "log" },
        peg$c302 = "\\log_{10}",
        peg$c303 = peg$literalExpectation("\\log_{10}", false),
        peg$c304 = function() { return "log10" },
        peg$c305 = "\\log",
        peg$c306 = peg$literalExpectation("\\log", false),
        peg$c307 = "\\arg",
        peg$c308 = peg$literalExpectation("\\arg", false),
        peg$c309 = function() { return "arg" },
        peg$c310 = function(firstObject, list) {
              let varsArray = list.reduce((result, currentEl) => {
                 result.push(currentEl[1]);
                 return result;
              }, [firstObject]);

              return (varsArray.join('*'));
         },
        peg$c311 = function(expr) {
            return ("(" + expr + ")");
         },
        peg$c312 = function(expr) {
              return ("(" + expr + ")");
         },
        peg$c313 = "\\frac{",
        peg$c314 = peg$literalExpectation("\\frac{", false),
        peg$c315 = "}{",
        peg$c316 = peg$literalExpectation("}{", false),
        peg$c317 = function(numerator, denominator) {
              return ("((" + numerator + ")/(" + denominator + "))");
        },
        peg$c318 = /^[0-9]/,
        peg$c319 = peg$classExpectation([["0", "9"]], false, false),
        peg$c320 = function(digits) {
           return digits.join('');
        },
        peg$c321 = ".",
        peg$c322 = peg$literalExpectation(".", false),
        peg$c323 = function(integer, decimals) {
           return integer + "." + decimals;
         },
        peg$c324 = "\\text{Function}\\left(_{",
        peg$c325 = peg$literalExpectation("\\text{Function}\\left(_{", false),
        peg$c326 = function(startSet, endSet, functionVarDef) {
            let funcObj = {
               startSet: startSet,
               endSet: endSet,
               S4MLVarName: functionVarDef.varName,
               instruction: functionVarDef.instruction
            };

           // nerdamer.setFunction(, functionVarDef.varName, functionVarDef.instruction)

           return (funcObj);
         },
        peg$c327 = "\\mapsto",
        peg$c328 = peg$literalExpectation("\\mapsto", false),
        peg$c329 = "?",
        peg$c330 = peg$literalExpectation("?", false),
        peg$c331 = function(varName, instruction) {
               return ({
                 varName: varName,
                 instruction: (instruction !== "?" ? instruction : null)
              });
         },
        peg$c332 = "\\left\\{",
        peg$c333 = peg$literalExpectation("\\left\\{", false),
        peg$c334 = "\\right\\}",
        peg$c335 = peg$literalExpectation("\\right\\}", false),
        peg$c336 = function(firstEl, followingEls) {
           let setContent = followingEls.reduce((total, currentEl) => {
              return (total + "," + currentEl[3]);
           }, firstEl);

           return "<SET[Elements["+ setContent + "]]>";
        },
        peg$c337 = "\\left\\{\\right\\}",
        peg$c338 = peg$literalExpectation("\\left\\{\\right\\}", false),
        peg$c339 = function() {
           return "<SET[Elements[]]>";
        },
        peg$c340 = "\\varnothing",
        peg$c341 = peg$literalExpectation("\\varnothing", false),
        peg$c342 = function() {
              return "<SET[Elements[]]>";
         },
        peg$c343 = "[",
        peg$c344 = peg$literalExpectation("[", false),
        peg$c345 = "]",
        peg$c346 = peg$literalExpectation("]", false),
        peg$c347 = function(firstHook, firstBoundary, secondBoundary, secondHook, includedIn) {
              return ("<SET[boundary1[" + firstBoundary + "][" + (firstHook === "[" ? "included" : "excluded") + "]]boundary2[" + secondBoundary + "][" + (secondHook === "]" ? "included" : "excluded") + "]subSetOf[" + includedIn + "]>");
         },
        peg$c348 = function(varName) {
            return (formatVarAtLargeNameFromS4MLToNerdamer(varName));
         },
        peg$c349 = function(funcName, funcVar) {
              return ({functionName: funcName, functionVar: funcVar})
         },
        peg$c350 = function(functionIdentifier) {
              let varName = functionIdentifier.functionName

              // check if var is not already defined
              if (g_s4mCoreMemory.hasAVarNamed(varName)
                 && g_s4mCoreMemory.getMathLineInputWhichDeclared(varName) !== processedMathLineInput) {

                 throw {
                    name: "DeclarationError",
                    message: "Variable [" + varName + "] is already defined."
                 };
              }

              return (varName); 
         },
        peg$c351 = function(varName) {
              return (varName)
         },
        peg$c352 = "\\vec{",
        peg$c353 = peg$literalExpectation("\\vec{", false),
        peg$c354 = function(varIdentifier) {
              return ('\\vec{' + varIdentifier + '}');
         },
        peg$c355 = function(mainId, indexes) {
              let indexesStr = '';
              if (indexes !== null) {
                 indexes.reverse();

                 for (let index of indexes) {
                    if (indexesStr === '') {
                       indexesStr = index;
                    } else {
                       indexesStr = index + "_{" + indexesStr + "}";   
                    }
                    
                 }

                 indexesStr = "_{" + indexesStr + "}";
              }

              return mainId + indexesStr;
         },
        peg$c356 = function(char) { 
              return ([char]);
              // return ("_{" + char + "}");
         },
        peg$c357 = function(indexIdentifier, nextIndex) {
              let retArray = [indexIdentifier];
              if (nextIndex !== null) {
                 retArray = retArray.concat(nextIndex);
              }

              return retArray;
         },
        peg$c358 = /^[A-Za-z]/,
        peg$c359 = peg$classExpectation([["A", "Z"], ["a", "z"]], false, false),
        peg$c360 = /^[A-Za-z0-9]/,
        peg$c361 = peg$classExpectation([["A", "Z"], ["a", "z"], ["0", "9"]], false, false),
        peg$c362 = "\\text{",
        peg$c363 = peg$literalExpectation("\\text{", false),
        peg$c364 = /^[A-Za-z0-9\xB0]/,
        peg$c365 = peg$classExpectation([["A", "Z"], ["a", "z"], ["0", "9"], "\xB0"], false, false),
        peg$c366 = function(str) {
              return ("\\text{" + str.join('') +"}");
         },
        peg$c367 = "\\alpha",
        peg$c368 = peg$literalExpectation("\\alpha", false),
        peg$c369 = "\\beta",
        peg$c370 = peg$literalExpectation("\\beta", false),
        peg$c371 = "\\Gamma",
        peg$c372 = peg$literalExpectation("\\Gamma", false),
        peg$c373 = "\\gamma",
        peg$c374 = peg$literalExpectation("\\gamma", false),
        peg$c375 = "\\Delta",
        peg$c376 = peg$literalExpectation("\\Delta", false),
        peg$c377 = "\\delta",
        peg$c378 = peg$literalExpectation("\\delta", false),
        peg$c379 = "\\epsilon",
        peg$c380 = peg$literalExpectation("\\epsilon", false),
        peg$c381 = "\\varepsilon",
        peg$c382 = peg$literalExpectation("\\varepsilon", false),
        peg$c383 = "\\zeta",
        peg$c384 = peg$literalExpectation("\\zeta", false),
        peg$c385 = "\\eta",
        peg$c386 = peg$literalExpectation("\\eta", false),
        peg$c387 = "\\Theta",
        peg$c388 = peg$literalExpectation("\\Theta", false),
        peg$c389 = "\\theta",
        peg$c390 = peg$literalExpectation("\\theta", false),
        peg$c391 = "\\iota",
        peg$c392 = peg$literalExpectation("\\iota", false),
        peg$c393 = "\\kappa",
        peg$c394 = peg$literalExpectation("\\kappa", false),
        peg$c395 = "\\Lambda",
        peg$c396 = peg$literalExpectation("\\Lambda", false),
        peg$c397 = "\\lambda",
        peg$c398 = peg$literalExpectation("\\lambda", false),
        peg$c399 = "\\mu",
        peg$c400 = peg$literalExpectation("\\mu", false),
        peg$c401 = "\\nu",
        peg$c402 = peg$literalExpectation("\\nu", false),
        peg$c403 = "\\Xi",
        peg$c404 = peg$literalExpectation("\\Xi", false),
        peg$c405 = "\\xi",
        peg$c406 = peg$literalExpectation("\\xi", false),
        peg$c407 = "\\Pi",
        peg$c408 = peg$literalExpectation("\\Pi", false),
        peg$c409 = "\\pi",
        peg$c410 = peg$literalExpectation("\\pi", false),
        peg$c411 = "\\rho",
        peg$c412 = peg$literalExpectation("\\rho", false),
        peg$c413 = "\\Sigma",
        peg$c414 = peg$literalExpectation("\\Sigma", false),
        peg$c415 = "\\sigma",
        peg$c416 = peg$literalExpectation("\\sigma", false),
        peg$c417 = "\\tau",
        peg$c418 = peg$literalExpectation("\\tau", false),
        peg$c419 = "\\Upsilon",
        peg$c420 = peg$literalExpectation("\\Upsilon", false),
        peg$c421 = "\\upsilon",
        peg$c422 = peg$literalExpectation("\\upsilon", false),
        peg$c423 = "\\Phi",
        peg$c424 = peg$literalExpectation("\\Phi", false),
        peg$c425 = "\\phi",
        peg$c426 = peg$literalExpectation("\\phi", false),
        peg$c427 = "\\chi",
        peg$c428 = peg$literalExpectation("\\chi", false),
        peg$c429 = "\\Psi",
        peg$c430 = peg$literalExpectation("\\Psi", false),
        peg$c431 = "\\psi",
        peg$c432 = peg$literalExpectation("\\psi", false),
        peg$c433 = "\\Omega",
        peg$c434 = peg$literalExpectation("\\Omega", false),
        peg$c435 = "\\omega",
        peg$c436 = peg$literalExpectation("\\omega", false),
        peg$c437 = function(str) {
           return (str);
         },
        peg$c438 = "\\text{\xB0}",
        peg$c439 = peg$literalExpectation("\\text{\xB0}", false),
        peg$c440 = "\\text{\xB0C}",
        peg$c441 = peg$literalExpectation("\\text{\xB0C}", false),
        peg$c442 = "\\text{d}",
        peg$c443 = peg$literalExpectation("\\text{d}", false),
        peg$c444 = "\\mathbb{",
        peg$c445 = peg$literalExpectation("\\mathbb{", false),
        peg$c446 = function(letter) {
            return ("\\mathbb{" + letter + "}");
         },
        peg$c447 = function(str) {
            let forbiddensStr = [
               "Let",
               "Given",
               "d",
            ];

            if (forbiddensStr.includes(str)) {
               throw {
                 name: "DeclarationError",
                 message: "Using a forbidden keyword for naming a constant."
              };
            }

            return str;
         },
        peg$c448 = /^[+\-]/,
        peg$c449 = peg$classExpectation(["+", "-"], false, false),
        peg$c450 = "\\ast",
        peg$c451 = peg$literalExpectation("\\ast", false),
        peg$c452 = function(mathBBLetter, indice, exposant) {
              let retValue = mathBBLetter;
              if (indice !== null) {
                 retValue += indice.join('');
              }

              if (exposant !== null) {
                 retValue += exposant.join('');
              }

              return retValue;
         },
        peg$c453 = function() {
              const processedMathLineInput = options.processedMathLineInput;

              processedMathLineInput.signalNoError();
              return "[Unprocess]";
         },
        peg$c454 = "#",
        peg$c455 = peg$literalExpectation("#", false),
        peg$c456 = function() {
            return "[Unprocess]";
         },
        peg$c457 = "--",
        peg$c458 = peg$literalExpectation("--", false),
        peg$c459 = function() {
           return "[Unprocess]";
        },
        peg$c460 = "\\vdash",
        peg$c461 = peg$literalExpectation("\\vdash", false),
        peg$c462 = "\\text{Print}\\ ",
        peg$c463 = peg$literalExpectation("\\text{Print}\\ ", false),
        peg$c464 = function(latexStr) {
           return "[Print]" + latexStr.join('');
        },
        peg$c465 = peg$otherExpectation("MandatoryWhiteSpace"),
        peg$c466 = "\\ ",
        peg$c467 = peg$literalExpectation("\\ ", false),
        peg$c468 = peg$otherExpectation("OptionnalWhiteSpaces"),
        peg$c469 = function() {
            return "+";
         },
        peg$c470 = function() {
            return "-";
         },
        peg$c471 = "\\cdot ",
        peg$c472 = peg$literalExpectation("\\cdot ", false),
        peg$c473 = "\\cdot",
        peg$c474 = peg$literalExpectation("\\cdot", false),
        peg$c475 = function() {
              return "*";
         },
        peg$c476 = "/",
        peg$c477 = peg$literalExpectation("/", false),
        peg$c478 = function() {
            return "/";
         },
        peg$c479 = "\\%",
        peg$c480 = peg$literalExpectation("\\%", false),
        peg$c481 = function() {
            return "%";
         },
        peg$c482 = function() {
            return "^";
         },
        peg$c483 = "\\times ",
        peg$c484 = peg$literalExpectation("\\times ", false),
        peg$c485 = "\\times",
        peg$c486 = peg$literalExpectation("\\times", false),
        peg$c487 = function() {
            return "*";
         },
        peg$c488 = "\\cup",
        peg$c489 = peg$literalExpectation("\\cup", false),
        peg$c490 = function() {
            return "<Operator[Union]>";
         },
        peg$c491 = "\\cap",
        peg$c492 = peg$literalExpectation("\\cap", false),
        peg$c493 = function() {
             return "<Operator[Intersection]>";
          },
        peg$c494 = "\\backslash",
        peg$c495 = peg$literalExpectation("\\backslash", false),
        peg$c496 = function() {
            return "<Operator[Backslash]>";
         },
        peg$c497 = function() {
            return "-"
         },
        peg$c498 = function() {
            return "<Operator[Identity]>"
         },

        peg$currPos          = 0,
        peg$savedPos         = 0,
        peg$posDetailsCache  = [{ line: 1, column: 1 }],
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$savedPos, peg$currPos);
    }

    function location() {
      return peg$computeLocation(peg$savedPos, peg$currPos);
    }

    function expected(description, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildStructuredError(
        [peg$otherExpectation(description)],
        input.substring(peg$savedPos, peg$currPos),
        location
      );
    }

    function error(message, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildSimpleError(message, location);
    }

    function peg$literalExpectation(text, ignoreCase) {
      return { type: "literal", text: text, ignoreCase: ignoreCase };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
    }

    function peg$anyExpectation() {
      return { type: "any" };
    }

    function peg$endExpectation() {
      return { type: "end" };
    }

    function peg$otherExpectation(description) {
      return { type: "other", description: description };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos], p;

      if (details) {
        return details;
      } else {
        p = pos - 1;
        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line:   details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails   = peg$computePosDetails(endPos);

      return {
        start: {
          offset: startPos,
          line:   startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line:   endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(
        peg$SyntaxError.buildMessage(expected, found),
        expected,
        found,
        location
      );
    }

    function peg$parsestart() {
      var s0;

      s0 = peg$parseUnprocessedLine();
      if (s0 === peg$FAILED) {
        s0 = peg$parsePrintLine();
        if (s0 === peg$FAILED) {
          s0 = peg$parseCommentaryLine();
          if (s0 === peg$FAILED) {
            s0 = peg$parseSeparatorLine();
            if (s0 === peg$FAILED) {
              s0 = peg$parseDeclaration();
              if (s0 === peg$FAILED) {
                s0 = peg$parseConstraint();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseExpression();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parseEmptyLine();
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseDeclaration() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 10) === peg$c1) {
          s2 = peg$c1;
          peg$currPos += 10;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c2); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseUndefinedFunctionIdentifier();
              if (s5 === peg$FAILED) {
                s5 = peg$parseUndefinedVarAtLargeIdentifier();
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseAffectationOperator();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      s9 = peg$parseExpression();
                      if (s9 !== peg$FAILED) {
                        s10 = peg$parse_();
                        if (s10 !== peg$FAILED) {
                          peg$savedPos = s0;
                          s1 = peg$c3(s5, s7, s9);
                          s0 = s1;
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c0); }
      }

      return s0;
    }

    function peg$parseUndefinedVarAtLargeIdentifier() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parseVarAtLargeIdentifier();
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c4(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseDefinedVarAtLargeIdentifier() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parseVarAtLargeIdentifier();
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c5(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseAffectationOperator() {
      var s0;

      s0 = peg$parseEqualOperator();
      if (s0 === peg$FAILED) {
        s0 = peg$parseInOperator();
      }

      return s0;
    }

    function peg$parseEqualOperator() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 61) {
        s0 = peg$c6;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c7); }
      }

      return s0;
    }

    function peg$parseInOperator() {
      var s0;

      if (input.substr(peg$currPos, 3) === peg$c8) {
        s0 = peg$c8;
        peg$currPos += 3;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c9); }
      }

      return s0;
    }

    function peg$parseEquation() {
      var s0;

      s0 = peg$parseEquationBracked();
      if (s0 === peg$FAILED) {
        s0 = peg$parseEquationBasic();
      }

      return s0;
    }

    function peg$parseEquationBasic() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parseExpression();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseEqualOperator();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseExpression();
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c10(s1, s2, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseEquationBracked() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c11) {
          s2 = peg$c11;
          peg$currPos += 6;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c12); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseEquationBasic();
          if (s3 !== peg$FAILED) {
            if (input.substr(peg$currPos, 7) === peg$c13) {
              s4 = peg$c13;
              peg$currPos += 7;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c14); }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c15(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseConstraint() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 12) === peg$c16) {
          s2 = peg$c16;
          peg$currPos += 12;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c17); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseStatement();
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c18(s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseStatement() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      if (input.length > peg$currPos) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c19); }
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          if (input.length > peg$currPos) {
            s2 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c19); }
          }
        }
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c20(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseInstanciation() {
      var s0;

      s0 = peg$parseFunctionInstanciation();
      if (s0 === peg$FAILED) {
        s0 = peg$parseSetInstanciation();
      }

      return s0;
    }

    function peg$parseExpression() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseFirstPriority3Term();
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$currPos;
            s6 = peg$parse_();
            if (s6 !== peg$FAILED) {
              s7 = peg$parsePriority3Operator();
              if (s7 !== peg$FAILED) {
                s8 = peg$parse_();
                if (s8 !== peg$FAILED) {
                  s9 = peg$parsePriority3Term();
                  if (s9 !== peg$FAILED) {
                    s10 = peg$parse_();
                    if (s10 !== peg$FAILED) {
                      s6 = [s6, s7, s8, s9, s10];
                      s5 = s6;
                    } else {
                      peg$currPos = s5;
                      s5 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s5;
                    s5 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$currPos;
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$parsePriority3Operator();
                if (s7 !== peg$FAILED) {
                  s8 = peg$parse_();
                  if (s8 !== peg$FAILED) {
                    s9 = peg$parsePriority3Term();
                    if (s9 !== peg$FAILED) {
                      s10 = peg$parse_();
                      if (s10 !== peg$FAILED) {
                        s6 = [s6, s7, s8, s9, s10];
                        s5 = s6;
                      } else {
                        peg$currPos = s5;
                        s5 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s5;
                      s5 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s5;
                    s5 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            }
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c21(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsePriority3Operator() {
      var s0;

      s0 = peg$parseOperator_plus();
      if (s0 === peg$FAILED) {
        s0 = peg$parseOperator_minus();
      }

      return s0;
    }

    function peg$parseFirstPriority3Term() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseUnaryOperator();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsePriority3Term();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c22(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsePriority3Term() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parsePriority2Term();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          s5 = peg$parsePriority2Operator();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse_();
            if (s6 !== peg$FAILED) {
              s7 = peg$parsePriority2Term();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsePriority2Operator();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$parsePriority2Term();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$FAILED;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c23(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsePriority2Term() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseFactor();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parse_();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseOperator_pow();
          if (s5 !== peg$FAILED) {
            s6 = peg$parse_();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseFactor();
              if (s7 !== peg$FAILED) {
                s4 = [s4, s5, s6, s7];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseOperator_pow();
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseFactor();
                if (s7 !== peg$FAILED) {
                  s4 = [s4, s5, s6, s7];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$FAILED;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c23(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsePriority2Operator() {
      var s0;

      s0 = peg$parseOperator_multiply();
      if (s0 === peg$FAILED) {
        s0 = peg$parseOperator_cross();
        if (s0 === peg$FAILED) {
          s0 = peg$parseOperator_divide();
          if (s0 === peg$FAILED) {
            s0 = peg$parseOperator_modulo();
          }
        }
      }

      return s0;
    }

    function peg$parseUnaryOperation() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseUnaryOperator();
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseExpression();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c24(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseUnaryOperator() {
      var s0;

      s0 = peg$parseOperator_opposite();
      if (s0 === peg$FAILED) {
        s0 = peg$parseOperator_identity();
      }

      return s0;
    }

    function peg$parseFactor() {
      var s0;

      s0 = peg$parseContiguousFactors();
      if (s0 === peg$FAILED) {
        s0 = peg$parseFactor_bracketed();
        if (s0 === peg$FAILED) {
          s0 = peg$parseFraction();
          if (s0 === peg$FAILED) {
            s0 = peg$parseFactor_braced();
            if (s0 === peg$FAILED) {
              s0 = peg$parseS4MLObject();
              if (s0 === peg$FAILED) {
                s0 = peg$parseInstanciation();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseNumber();
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseS4MLObject() {
      var s0;

      s0 = peg$parseInstanciation();
      if (s0 === peg$FAILED) {
        s0 = peg$parseDeposedKeyword();
        if (s0 === peg$FAILED) {
          s0 = peg$parseVarAtLargeIdentifier();
        }
      }

      return s0;
    }

    function peg$parseDeposedKeyword() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c25) {
        s1 = peg$c25;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c26); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseExpression();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 125) {
            s3 = peg$c27;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c28); }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c29(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 8) === peg$c30) {
          s1 = peg$c30;
          peg$currPos += 8;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c31); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse_();
          if (s2 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 95) {
              s3 = peg$c32;
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c33); }
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parseVarAtLargeIdentifier();
              if (s4 !== peg$FAILED) {
                if (input.substr(peg$currPos, 6) === peg$c11) {
                  s5 = peg$c11;
                  peg$currPos += 6;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c12); }
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$parseExpression();
                  if (s6 !== peg$FAILED) {
                    if (input.substr(peg$currPos, 7) === peg$c13) {
                      s7 = peg$c13;
                      peg$currPos += 7;
                    } else {
                      s7 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c14); }
                    }
                    if (s7 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c34(s4, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 8) === peg$c30) {
            s1 = peg$c30;
            peg$currPos += 8;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c31); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c35) {
                s3 = peg$c35;
                peg$currPos += 2;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c36); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parseVarAtLargeIdentifier();
                if (s4 !== peg$FAILED) {
                  if (input.substr(peg$currPos, 7) === peg$c37) {
                    s5 = peg$c37;
                    peg$currPos += 7;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c38); }
                  }
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parseExpression();
                    if (s6 !== peg$FAILED) {
                      if (input.substr(peg$currPos, 7) === peg$c13) {
                        s7 = peg$c13;
                        peg$currPos += 7;
                      } else {
                        s7 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c14); }
                      }
                      if (s7 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c34(s4, s6);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 8) === peg$c30) {
              s1 = peg$c30;
              peg$currPos += 8;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c31); }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parse_();
              if (s2 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 95) {
                  s3 = peg$c32;
                  peg$currPos++;
                } else {
                  s3 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c33); }
                }
                if (s3 !== peg$FAILED) {
                  s4 = peg$parseVarAtLargeIdentifier();
                  if (s4 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 94) {
                      s5 = peg$c39;
                      peg$currPos++;
                    } else {
                      s5 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c40); }
                    }
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parseInteger();
                      if (s6 !== peg$FAILED) {
                        if (input.substr(peg$currPos, 6) === peg$c11) {
                          s7 = peg$c11;
                          peg$currPos += 6;
                        } else {
                          s7 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c12); }
                        }
                        if (s7 !== peg$FAILED) {
                          s8 = peg$parseExpression();
                          if (s8 !== peg$FAILED) {
                            if (input.substr(peg$currPos, 7) === peg$c13) {
                              s9 = peg$c13;
                              peg$currPos += 7;
                            } else {
                              s9 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                            }
                            if (s9 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s1 = peg$c41(s4, s6, s8);
                              s0 = s1;
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 8) === peg$c30) {
                s1 = peg$c30;
                peg$currPos += 8;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c31); }
              }
              if (s1 !== peg$FAILED) {
                s2 = peg$parse_();
                if (s2 !== peg$FAILED) {
                  if (input.substr(peg$currPos, 2) === peg$c35) {
                    s3 = peg$c35;
                    peg$currPos += 2;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c36); }
                  }
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parseVarAtLargeIdentifier();
                    if (s4 !== peg$FAILED) {
                      if (input.substr(peg$currPos, 2) === peg$c42) {
                        s5 = peg$c42;
                        peg$currPos += 2;
                      } else {
                        s5 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c43); }
                      }
                      if (s5 !== peg$FAILED) {
                        s6 = peg$parseInteger();
                        if (s6 !== peg$FAILED) {
                          if (input.substr(peg$currPos, 6) === peg$c11) {
                            s7 = peg$c11;
                            peg$currPos += 6;
                          } else {
                            s7 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c12); }
                          }
                          if (s7 !== peg$FAILED) {
                            s8 = peg$parseExpression();
                            if (s8 !== peg$FAILED) {
                              if (input.substr(peg$currPos, 7) === peg$c13) {
                                s9 = peg$c13;
                                peg$currPos += 7;
                              } else {
                                s9 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c14); }
                              }
                              if (s9 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c41(s4, s6, s8);
                                s0 = s1;
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 8) === peg$c30) {
                  s1 = peg$c30;
                  peg$currPos += 8;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c31); }
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$parse_();
                  if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 95) {
                      s3 = peg$c32;
                      peg$currPos++;
                    } else {
                      s3 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c33); }
                    }
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parseVarAtLargeIdentifier();
                      if (s4 !== peg$FAILED) {
                        if (input.substr(peg$currPos, 2) === peg$c44) {
                          s5 = peg$c44;
                          peg$currPos += 2;
                        } else {
                          s5 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c45); }
                        }
                        if (s5 !== peg$FAILED) {
                          s6 = peg$parseInteger();
                          if (s6 !== peg$FAILED) {
                            if (input.substr(peg$currPos, 7) === peg$c37) {
                              s7 = peg$c37;
                              peg$currPos += 7;
                            } else {
                              s7 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c38); }
                            }
                            if (s7 !== peg$FAILED) {
                              s8 = peg$parseExpression();
                              if (s8 !== peg$FAILED) {
                                if (input.substr(peg$currPos, 7) === peg$c13) {
                                  s9 = peg$c13;
                                  peg$currPos += 7;
                                } else {
                                  s9 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                }
                                if (s9 !== peg$FAILED) {
                                  peg$savedPos = s0;
                                  s1 = peg$c41(s4, s6, s8);
                                  s0 = s1;
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  if (input.substr(peg$currPos, 8) === peg$c30) {
                    s1 = peg$c30;
                    peg$currPos += 8;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c31); }
                  }
                  if (s1 !== peg$FAILED) {
                    s2 = peg$parse_();
                    if (s2 !== peg$FAILED) {
                      if (input.substr(peg$currPos, 2) === peg$c35) {
                        s3 = peg$c35;
                        peg$currPos += 2;
                      } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c36); }
                      }
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parseVarAtLargeIdentifier();
                        if (s4 !== peg$FAILED) {
                          if (input.substr(peg$currPos, 3) === peg$c46) {
                            s5 = peg$c46;
                            peg$currPos += 3;
                          } else {
                            s5 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c47); }
                          }
                          if (s5 !== peg$FAILED) {
                            s6 = peg$parseInteger();
                            if (s6 !== peg$FAILED) {
                              if (input.substr(peg$currPos, 7) === peg$c37) {
                                s7 = peg$c37;
                                peg$currPos += 7;
                              } else {
                                s7 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c38); }
                              }
                              if (s7 !== peg$FAILED) {
                                s8 = peg$parseExpression();
                                if (s8 !== peg$FAILED) {
                                  if (input.substr(peg$currPos, 7) === peg$c13) {
                                    s9 = peg$c13;
                                    peg$currPos += 7;
                                  } else {
                                    s9 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                  }
                                  if (s9 !== peg$FAILED) {
                                    peg$savedPos = s0;
                                    s1 = peg$c41(s4, s6, s8);
                                    s0 = s1;
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.substr(peg$currPos, 14) === peg$c48) {
                      s1 = peg$c48;
                      peg$currPos += 14;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c49); }
                    }
                    if (s1 !== peg$FAILED) {
                      s2 = peg$parse_();
                      if (s2 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 94) {
                          s3 = peg$c39;
                          peg$currPos++;
                        } else {
                          s3 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c40); }
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parseInteger();
                          if (s4 !== peg$FAILED) {
                            s5 = peg$c50;
                            if (s5 !== peg$FAILED) {
                              s6 = peg$parse_();
                              if (s6 !== peg$FAILED) {
                                s7 = peg$c50;
                                if (s7 !== peg$FAILED) {
                                  s8 = peg$parseVarAtLargeIdentifier();
                                  if (s8 !== peg$FAILED) {
                                    if (input.substr(peg$currPos, 10) === peg$c51) {
                                      s9 = peg$c51;
                                      peg$currPos += 10;
                                    } else {
                                      s9 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c52); }
                                    }
                                    if (s9 !== peg$FAILED) {
                                      s10 = peg$parse_();
                                      if (s10 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 94) {
                                          s11 = peg$c39;
                                          peg$currPos++;
                                        } else {
                                          s11 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                        }
                                        if (s11 !== peg$FAILED) {
                                          s12 = peg$parseInteger();
                                          if (s12 !== peg$FAILED) {
                                            s13 = peg$c50;
                                            if (s13 !== peg$FAILED) {
                                              s14 = peg$parse_();
                                              if (s14 !== peg$FAILED) {
                                                s15 = peg$parseVarAtLargeIdentifier();
                                                if (s15 !== peg$FAILED) {
                                                  if (input.charCodeAt(peg$currPos) === 125) {
                                                    s16 = peg$c27;
                                                    peg$currPos++;
                                                  } else {
                                                    s16 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                  }
                                                  if (s16 !== peg$FAILED) {
                                                    peg$savedPos = s0;
                                                    s1 = peg$c53(s4, s8, s12, s15);
                                                    s0 = s1;
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      if (input.substr(peg$currPos, 14) === peg$c48) {
                        s1 = peg$c48;
                        peg$currPos += 14;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c49); }
                      }
                      if (s1 !== peg$FAILED) {
                        s2 = peg$parse_();
                        if (s2 !== peg$FAILED) {
                          if (input.substr(peg$currPos, 2) === peg$c44) {
                            s3 = peg$c44;
                            peg$currPos += 2;
                          } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c45); }
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parseInteger();
                            if (s4 !== peg$FAILED) {
                              if (input.charCodeAt(peg$currPos) === 125) {
                                s5 = peg$c27;
                                peg$currPos++;
                              } else {
                                s5 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c28); }
                              }
                              if (s5 !== peg$FAILED) {
                                s6 = peg$parseVarAtLargeIdentifier();
                                if (s6 !== peg$FAILED) {
                                  if (input.substr(peg$currPos, 10) === peg$c51) {
                                    s7 = peg$c51;
                                    peg$currPos += 10;
                                  } else {
                                    s7 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c52); }
                                  }
                                  if (s7 !== peg$FAILED) {
                                    s8 = peg$parse_();
                                    if (s8 !== peg$FAILED) {
                                      if (input.substr(peg$currPos, 2) === peg$c44) {
                                        s9 = peg$c44;
                                        peg$currPos += 2;
                                      } else {
                                        s9 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c45); }
                                      }
                                      if (s9 !== peg$FAILED) {
                                        s10 = peg$parseInteger();
                                        if (s10 !== peg$FAILED) {
                                          if (input.charCodeAt(peg$currPos) === 125) {
                                            s11 = peg$c27;
                                            peg$currPos++;
                                          } else {
                                            s11 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                          }
                                          if (s11 !== peg$FAILED) {
                                            s12 = peg$parseVarAtLargeIdentifier();
                                            if (s12 !== peg$FAILED) {
                                              if (input.charCodeAt(peg$currPos) === 125) {
                                                s13 = peg$c27;
                                                peg$currPos++;
                                              } else {
                                                s13 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                              }
                                              if (s13 !== peg$FAILED) {
                                                peg$savedPos = s0;
                                                s1 = peg$c53(s4, s6, s10, s12);
                                                s0 = s1;
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                      if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.substr(peg$currPos, 20) === peg$c54) {
                          s1 = peg$c54;
                          peg$currPos += 20;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c55); }
                        }
                        if (s1 !== peg$FAILED) {
                          s2 = peg$parse_();
                          if (s2 !== peg$FAILED) {
                            if (input.substr(peg$currPos, 10) === peg$c51) {
                              s3 = peg$c51;
                              peg$currPos += 10;
                            } else {
                              s3 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c52); }
                            }
                            if (s3 !== peg$FAILED) {
                              s4 = peg$parse_();
                              if (s4 !== peg$FAILED) {
                                s5 = peg$c50;
                                if (s5 !== peg$FAILED) {
                                  s6 = peg$parseVarAtLargeIdentifier();
                                  if (s6 !== peg$FAILED) {
                                    if (input.substr(peg$currPos, 9) === peg$c56) {
                                      s7 = peg$c56;
                                      peg$currPos += 9;
                                    } else {
                                      s7 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c57); }
                                    }
                                    if (s7 !== peg$FAILED) {
                                      s8 = peg$parseInteger();
                                      if (s8 !== peg$FAILED) {
                                        if (input.substr(peg$currPos, 6) === peg$c11) {
                                          s9 = peg$c11;
                                          peg$currPos += 6;
                                        } else {
                                          s9 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                        }
                                        if (s9 !== peg$FAILED) {
                                          s10 = peg$parseVarAtLargeIdentifier();
                                          if (s10 !== peg$FAILED) {
                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                              s11 = peg$c13;
                                              peg$currPos += 7;
                                            } else {
                                              s11 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                            }
                                            if (s11 !== peg$FAILED) {
                                              peg$savedPos = s0;
                                              s1 = peg$c58(s6, s8, s10);
                                              s0 = s1;
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                          s0 = peg$currPos;
                          if (input.substr(peg$currPos, 20) === peg$c54) {
                            s1 = peg$c54;
                            peg$currPos += 20;
                          } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c55); }
                          }
                          if (s1 !== peg$FAILED) {
                            s2 = peg$parse_();
                            if (s2 !== peg$FAILED) {
                              if (input.substr(peg$currPos, 10) === peg$c51) {
                                s3 = peg$c51;
                                peg$currPos += 10;
                              } else {
                                s3 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c52); }
                              }
                              if (s3 !== peg$FAILED) {
                                s4 = peg$parse_();
                                if (s4 !== peg$FAILED) {
                                  s5 = peg$c50;
                                  if (s5 !== peg$FAILED) {
                                    s6 = peg$parseVarAtLargeIdentifier();
                                    if (s6 !== peg$FAILED) {
                                      if (input.substr(peg$currPos, 10) === peg$c59) {
                                        s7 = peg$c59;
                                        peg$currPos += 10;
                                      } else {
                                        s7 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c60); }
                                      }
                                      if (s7 !== peg$FAILED) {
                                        s8 = peg$parseInteger();
                                        if (s8 !== peg$FAILED) {
                                          if (input.substr(peg$currPos, 7) === peg$c37) {
                                            s9 = peg$c37;
                                            peg$currPos += 7;
                                          } else {
                                            s9 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c38); }
                                          }
                                          if (s9 !== peg$FAILED) {
                                            s10 = peg$parseVarAtLargeIdentifier();
                                            if (s10 !== peg$FAILED) {
                                              if (input.substr(peg$currPos, 7) === peg$c13) {
                                                s11 = peg$c13;
                                                peg$currPos += 7;
                                              } else {
                                                s11 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                              }
                                              if (s11 !== peg$FAILED) {
                                                peg$savedPos = s0;
                                                s1 = peg$c58(s6, s8, s10);
                                                s0 = s1;
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                          if (s0 === peg$FAILED) {
                            s0 = peg$currPos;
                            if (input.substr(peg$currPos, 14) === peg$c48) {
                              s1 = peg$c48;
                              peg$currPos += 14;
                            } else {
                              s1 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c49); }
                            }
                            if (s1 !== peg$FAILED) {
                              s2 = peg$parse_();
                              if (s2 !== peg$FAILED) {
                                if (input.charCodeAt(peg$currPos) === 94) {
                                  s3 = peg$c39;
                                  peg$currPos++;
                                } else {
                                  s3 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                }
                                if (s3 !== peg$FAILED) {
                                  s4 = peg$parseInteger();
                                  if (s4 !== peg$FAILED) {
                                    if (input.substr(peg$currPos, 10) === peg$c51) {
                                      s5 = peg$c51;
                                      peg$currPos += 10;
                                    } else {
                                      s5 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c52); }
                                    }
                                    if (s5 !== peg$FAILED) {
                                      s6 = peg$parse_();
                                      if (s6 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 94) {
                                          s7 = peg$c39;
                                          peg$currPos++;
                                        } else {
                                          s7 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                        }
                                        if (s7 !== peg$FAILED) {
                                          s8 = peg$parseInteger();
                                          if (s8 !== peg$FAILED) {
                                            s9 = peg$c50;
                                            if (s9 !== peg$FAILED) {
                                              s10 = peg$parseVarAtLargeIdentifier();
                                              if (s10 !== peg$FAILED) {
                                                if (input.substr(peg$currPos, 7) === peg$c37) {
                                                  s11 = peg$c37;
                                                  peg$currPos += 7;
                                                } else {
                                                  s11 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c38); }
                                                }
                                                if (s11 !== peg$FAILED) {
                                                  s12 = peg$parseExpression();
                                                  if (s12 !== peg$FAILED) {
                                                    if (input.substr(peg$currPos, 7) === peg$c13) {
                                                      s13 = peg$c13;
                                                      peg$currPos += 7;
                                                    } else {
                                                      s13 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                    }
                                                    if (s13 !== peg$FAILED) {
                                                      peg$savedPos = s0;
                                                      s1 = peg$c61(s4, s8, s10, s12);
                                                      s0 = s1;
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                            if (s0 === peg$FAILED) {
                              s0 = peg$currPos;
                              if (input.substr(peg$currPos, 14) === peg$c48) {
                                s1 = peg$c48;
                                peg$currPos += 14;
                              } else {
                                s1 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c49); }
                              }
                              if (s1 !== peg$FAILED) {
                                s2 = peg$parse_();
                                if (s2 !== peg$FAILED) {
                                  if (input.substr(peg$currPos, 2) === peg$c44) {
                                    s3 = peg$c44;
                                    peg$currPos += 2;
                                  } else {
                                    s3 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c45); }
                                  }
                                  if (s3 !== peg$FAILED) {
                                    s4 = peg$parseInteger();
                                    if (s4 !== peg$FAILED) {
                                      if (input.substr(peg$currPos, 11) === peg$c62) {
                                        s5 = peg$c62;
                                        peg$currPos += 11;
                                      } else {
                                        s5 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c63); }
                                      }
                                      if (s5 !== peg$FAILED) {
                                        s6 = peg$parse_();
                                        if (s6 !== peg$FAILED) {
                                          if (input.substr(peg$currPos, 2) === peg$c44) {
                                            s7 = peg$c44;
                                            peg$currPos += 2;
                                          } else {
                                            s7 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c45); }
                                          }
                                          if (s7 !== peg$FAILED) {
                                            s8 = peg$parseInteger();
                                            if (s8 !== peg$FAILED) {
                                              if (input.charCodeAt(peg$currPos) === 125) {
                                                s9 = peg$c27;
                                                peg$currPos++;
                                              } else {
                                                s9 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                              }
                                              if (s9 !== peg$FAILED) {
                                                s10 = peg$parseVarAtLargeIdentifier();
                                                if (s10 !== peg$FAILED) {
                                                  if (input.substr(peg$currPos, 7) === peg$c37) {
                                                    s11 = peg$c37;
                                                    peg$currPos += 7;
                                                  } else {
                                                    s11 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c38); }
                                                  }
                                                  if (s11 !== peg$FAILED) {
                                                    s12 = peg$parseExpression();
                                                    if (s12 !== peg$FAILED) {
                                                      if (input.substr(peg$currPos, 7) === peg$c13) {
                                                        s13 = peg$c13;
                                                        peg$currPos += 7;
                                                      } else {
                                                        s13 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                      }
                                                      if (s13 !== peg$FAILED) {
                                                        peg$savedPos = s0;
                                                        s1 = peg$c61(s4, s8, s10, s12);
                                                        s0 = s1;
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                              if (s0 === peg$FAILED) {
                                s0 = peg$currPos;
                                if (input.substr(peg$currPos, 20) === peg$c54) {
                                  s1 = peg$c54;
                                  peg$currPos += 20;
                                } else {
                                  s1 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c55); }
                                }
                                if (s1 !== peg$FAILED) {
                                  s2 = peg$parse_();
                                  if (s2 !== peg$FAILED) {
                                    if (input.charCodeAt(peg$currPos) === 94) {
                                      s3 = peg$c39;
                                      peg$currPos++;
                                    } else {
                                      s3 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                    }
                                    if (s3 !== peg$FAILED) {
                                      s4 = peg$parseInteger();
                                      if (s4 !== peg$FAILED) {
                                        if (input.substr(peg$currPos, 10) === peg$c51) {
                                          s5 = peg$c51;
                                          peg$currPos += 10;
                                        } else {
                                          s5 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c52); }
                                        }
                                        if (s5 !== peg$FAILED) {
                                          s6 = peg$parse_();
                                          if (s6 !== peg$FAILED) {
                                            if (input.charCodeAt(peg$currPos) === 94) {
                                              s7 = peg$c39;
                                              peg$currPos++;
                                            } else {
                                              s7 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                            }
                                            if (s7 !== peg$FAILED) {
                                              s8 = peg$parseInteger();
                                              if (s8 !== peg$FAILED) {
                                                s9 = peg$c50;
                                                if (s9 !== peg$FAILED) {
                                                  s10 = peg$parseVarAtLargeIdentifier();
                                                  if (s10 !== peg$FAILED) {
                                                    if (input.substr(peg$currPos, 14) === peg$c64) {
                                                      s11 = peg$c64;
                                                      peg$currPos += 14;
                                                    } else {
                                                      s11 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c65); }
                                                    }
                                                    if (s11 !== peg$FAILED) {
                                                      s12 = peg$parseExpression();
                                                      if (s12 !== peg$FAILED) {
                                                        if (input.substr(peg$currPos, 7) === peg$c13) {
                                                          s13 = peg$c13;
                                                          peg$currPos += 7;
                                                        } else {
                                                          s13 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                        }
                                                        if (s13 !== peg$FAILED) {
                                                          peg$savedPos = s0;
                                                          s1 = peg$c61(s4, s8, s10, s12);
                                                          s0 = s1;
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = peg$currPos;
                                  if (input.substr(peg$currPos, 20) === peg$c54) {
                                    s1 = peg$c54;
                                    peg$currPos += 20;
                                  } else {
                                    s1 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c55); }
                                  }
                                  if (s1 !== peg$FAILED) {
                                    s2 = peg$parse_();
                                    if (s2 !== peg$FAILED) {
                                      if (input.substr(peg$currPos, 2) === peg$c44) {
                                        s3 = peg$c44;
                                        peg$currPos += 2;
                                      } else {
                                        s3 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c45); }
                                      }
                                      if (s3 !== peg$FAILED) {
                                        s4 = peg$parseInteger();
                                        if (s4 !== peg$FAILED) {
                                          if (input.substr(peg$currPos, 11) === peg$c62) {
                                            s5 = peg$c62;
                                            peg$currPos += 11;
                                          } else {
                                            s5 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c63); }
                                          }
                                          if (s5 !== peg$FAILED) {
                                            s6 = peg$parse_();
                                            if (s6 !== peg$FAILED) {
                                              if (input.substr(peg$currPos, 2) === peg$c44) {
                                                s7 = peg$c44;
                                                peg$currPos += 2;
                                              } else {
                                                s7 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c45); }
                                              }
                                              if (s7 !== peg$FAILED) {
                                                s8 = peg$parseInteger();
                                                if (s8 !== peg$FAILED) {
                                                  if (input.charCodeAt(peg$currPos) === 125) {
                                                    s9 = peg$c27;
                                                    peg$currPos++;
                                                  } else {
                                                    s9 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                  }
                                                  if (s9 !== peg$FAILED) {
                                                    s10 = peg$parseVarAtLargeIdentifier();
                                                    if (s10 !== peg$FAILED) {
                                                      if (input.substr(peg$currPos, 14) === peg$c64) {
                                                        s11 = peg$c64;
                                                        peg$currPos += 14;
                                                      } else {
                                                        s11 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c65); }
                                                      }
                                                      if (s11 !== peg$FAILED) {
                                                        s12 = peg$parseExpression();
                                                        if (s12 !== peg$FAILED) {
                                                          if (input.substr(peg$currPos, 7) === peg$c13) {
                                                            s13 = peg$c13;
                                                            peg$currPos += 7;
                                                          } else {
                                                            s13 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                          }
                                                          if (s13 !== peg$FAILED) {
                                                            peg$savedPos = s0;
                                                            s1 = peg$c61(s4, s8, s10, s12);
                                                            s0 = s1;
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = peg$currPos;
                                    if (input.substr(peg$currPos, 5) === peg$c66) {
                                      s1 = peg$c66;
                                      peg$currPos += 5;
                                    } else {
                                      s1 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c67); }
                                    }
                                    if (s1 !== peg$FAILED) {
                                      s2 = peg$parseVarAtLargeIdentifier();
                                      if (s2 === peg$FAILED) {
                                        s2 = peg$parseNumber();
                                      }
                                      if (s2 !== peg$FAILED) {
                                        if (input.substr(peg$currPos, 6) === peg$c11) {
                                          s3 = peg$c11;
                                          peg$currPos += 6;
                                        } else {
                                          s3 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                        }
                                        if (s3 !== peg$FAILED) {
                                          s4 = peg$parseExpression();
                                          if (s4 !== peg$FAILED) {
                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                              s5 = peg$c13;
                                              peg$currPos += 7;
                                            } else {
                                              s5 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                            }
                                            if (s5 !== peg$FAILED) {
                                              peg$savedPos = s0;
                                              s1 = peg$c68(s2, s4);
                                              s0 = s1;
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = peg$currPos;
                                      if (input.substr(peg$currPos, 6) === peg$c69) {
                                        s1 = peg$c69;
                                        peg$currPos += 6;
                                      } else {
                                        s1 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c70); }
                                      }
                                      if (s1 !== peg$FAILED) {
                                        s2 = peg$parseVarAtLargeIdentifier();
                                        if (s2 === peg$FAILED) {
                                          s2 = peg$parseNumber();
                                        }
                                        if (s2 !== peg$FAILED) {
                                          if (input.substr(peg$currPos, 7) === peg$c37) {
                                            s3 = peg$c37;
                                            peg$currPos += 7;
                                          } else {
                                            s3 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c38); }
                                          }
                                          if (s3 !== peg$FAILED) {
                                            s4 = peg$parseExpression();
                                            if (s4 !== peg$FAILED) {
                                              if (input.substr(peg$currPos, 7) === peg$c13) {
                                                s5 = peg$c13;
                                                peg$currPos += 7;
                                              } else {
                                                s5 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                              }
                                              if (s5 !== peg$FAILED) {
                                                peg$savedPos = s0;
                                                s1 = peg$c68(s2, s4);
                                                s0 = s1;
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = peg$currPos;
                                        if (input.substr(peg$currPos, 27) === peg$c71) {
                                          s1 = peg$c71;
                                          peg$currPos += 27;
                                        } else {
                                          s1 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c72); }
                                        }
                                        if (s1 !== peg$FAILED) {
                                          s2 = peg$parse_();
                                          if (s2 !== peg$FAILED) {
                                            s3 = peg$parseExpression();
                                            if (s3 !== peg$FAILED) {
                                              s4 = peg$parse_();
                                              if (s4 !== peg$FAILED) {
                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                  s5 = peg$c73;
                                                  peg$currPos++;
                                                } else {
                                                  s5 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                }
                                                if (s5 !== peg$FAILED) {
                                                  s6 = peg$parse_();
                                                  if (s6 !== peg$FAILED) {
                                                    s7 = peg$parseExpression();
                                                    if (s7 !== peg$FAILED) {
                                                      s8 = peg$parse_();
                                                      if (s8 !== peg$FAILED) {
                                                        if (input.substr(peg$currPos, 7) === peg$c13) {
                                                          s9 = peg$c13;
                                                          peg$currPos += 7;
                                                        } else {
                                                          s9 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                        }
                                                        if (s9 !== peg$FAILED) {
                                                          peg$savedPos = s0;
                                                          s1 = peg$c75(s3, s7);
                                                          s0 = s1;
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s0;
                                          s0 = peg$FAILED;
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = peg$currPos;
                                          if (input.substr(peg$currPos, 26) === peg$c76) {
                                            s1 = peg$c76;
                                            peg$currPos += 26;
                                          } else {
                                            s1 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c77); }
                                          }
                                          if (s1 !== peg$FAILED) {
                                            s2 = peg$parse_();
                                            if (s2 !== peg$FAILED) {
                                              s3 = peg$parseVarAtLargeIdentifier();
                                              if (s3 !== peg$FAILED) {
                                                s4 = peg$parse_();
                                                if (s4 !== peg$FAILED) {
                                                  if (input.charCodeAt(peg$currPos) === 44) {
                                                    s5 = peg$c73;
                                                    peg$currPos++;
                                                  } else {
                                                    s5 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                  }
                                                  if (s5 !== peg$FAILED) {
                                                    s6 = peg$parse_();
                                                    if (s6 !== peg$FAILED) {
                                                      s7 = peg$parseEquation();
                                                      if (s7 !== peg$FAILED) {
                                                        s8 = peg$parse_();
                                                        if (s8 !== peg$FAILED) {
                                                          if (input.substr(peg$currPos, 7) === peg$c13) {
                                                            s9 = peg$c13;
                                                            peg$currPos += 7;
                                                          } else {
                                                            s9 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                          }
                                                          if (s9 !== peg$FAILED) {
                                                            peg$savedPos = s0;
                                                            s1 = peg$c78(s3, s7);
                                                            s0 = s1;
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s0;
                                            s0 = peg$FAILED;
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = peg$currPos;
                                            if (input.substr(peg$currPos, 32) === peg$c79) {
                                              s1 = peg$c79;
                                              peg$currPos += 32;
                                            } else {
                                              s1 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c80); }
                                            }
                                            if (s1 !== peg$FAILED) {
                                              s2 = peg$parseEquation();
                                              if (s2 !== peg$FAILED) {
                                                s3 = peg$parse_();
                                                if (s3 !== peg$FAILED) {
                                                  s4 = [];
                                                  s5 = peg$currPos;
                                                  if (input.charCodeAt(peg$currPos) === 44) {
                                                    s6 = peg$c73;
                                                    peg$currPos++;
                                                  } else {
                                                    s6 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                  }
                                                  if (s6 !== peg$FAILED) {
                                                    s7 = peg$parseEquation();
                                                    if (s7 !== peg$FAILED) {
                                                      s6 = [s6, s7];
                                                      s5 = s6;
                                                    } else {
                                                      peg$currPos = s5;
                                                      s5 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s5;
                                                    s5 = peg$FAILED;
                                                  }
                                                  while (s5 !== peg$FAILED) {
                                                    s4.push(s5);
                                                    s5 = peg$currPos;
                                                    if (input.charCodeAt(peg$currPos) === 44) {
                                                      s6 = peg$c73;
                                                      peg$currPos++;
                                                    } else {
                                                      s6 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                    }
                                                    if (s6 !== peg$FAILED) {
                                                      s7 = peg$parseEquation();
                                                      if (s7 !== peg$FAILED) {
                                                        s6 = [s6, s7];
                                                        s5 = s6;
                                                      } else {
                                                        peg$currPos = s5;
                                                        s5 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s5;
                                                      s5 = peg$FAILED;
                                                    }
                                                  }
                                                  if (s4 !== peg$FAILED) {
                                                    if (input.substr(peg$currPos, 14) === peg$c81) {
                                                      s5 = peg$c81;
                                                      peg$currPos += 14;
                                                    } else {
                                                      s5 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c82); }
                                                    }
                                                    if (s5 !== peg$FAILED) {
                                                      peg$savedPos = s0;
                                                      s1 = peg$c83(s2, s4);
                                                      s0 = s1;
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s0;
                                              s0 = peg$FAILED;
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = peg$currPos;
                                              if (input.substr(peg$currPos, 30) === peg$c84) {
                                                s1 = peg$c84;
                                                peg$currPos += 30;
                                              } else {
                                                s1 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c85); }
                                              }
                                              if (s1 !== peg$FAILED) {
                                                s2 = peg$parseExpression();
                                                if (s2 !== peg$FAILED) {
                                                  if (input.substr(peg$currPos, 7) === peg$c13) {
                                                    s3 = peg$c13;
                                                    peg$currPos += 7;
                                                  } else {
                                                    s3 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                  }
                                                  if (s3 !== peg$FAILED) {
                                                    peg$savedPos = s0;
                                                    s1 = peg$c86(s2);
                                                    s0 = s1;
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s0;
                                                s0 = peg$FAILED;
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = peg$currPos;
                                                if (input.substr(peg$currPos, 29) === peg$c87) {
                                                  s1 = peg$c87;
                                                  peg$currPos += 29;
                                                } else {
                                                  s1 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c88); }
                                                }
                                                if (s1 !== peg$FAILED) {
                                                  s2 = peg$parseExpression();
                                                  if (s2 !== peg$FAILED) {
                                                    if (input.substr(peg$currPos, 7) === peg$c13) {
                                                      s3 = peg$c13;
                                                      peg$currPos += 7;
                                                    } else {
                                                      s3 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                    }
                                                    if (s3 !== peg$FAILED) {
                                                      peg$savedPos = s0;
                                                      s1 = peg$c89(s2);
                                                      s0 = s1;
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s0;
                                                  s0 = peg$FAILED;
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = peg$currPos;
                                                  if (input.substr(peg$currPos, 21) === peg$c90) {
                                                    s1 = peg$c90;
                                                    peg$currPos += 21;
                                                  } else {
                                                    s1 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c91); }
                                                  }
                                                  if (s1 !== peg$FAILED) {
                                                    s2 = peg$parse_();
                                                    if (s2 !== peg$FAILED) {
                                                      if (input.substr(peg$currPos, 6) === peg$c11) {
                                                        s3 = peg$c11;
                                                        peg$currPos += 6;
                                                      } else {
                                                        s3 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                                      }
                                                      if (s3 !== peg$FAILED) {
                                                        s4 = peg$parseExpression();
                                                        if (s4 !== peg$FAILED) {
                                                          if (input.substr(peg$currPos, 7) === peg$c13) {
                                                            s5 = peg$c13;
                                                            peg$currPos += 7;
                                                          } else {
                                                            s5 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                          }
                                                          if (s5 !== peg$FAILED) {
                                                            peg$savedPos = s0;
                                                            s1 = peg$c92(s4);
                                                            s0 = s1;
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s0;
                                                    s0 = peg$FAILED;
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = peg$currPos;
                                                    if (input.substr(peg$currPos, 21) === peg$c90) {
                                                      s1 = peg$c90;
                                                      peg$currPos += 21;
                                                    } else {
                                                      s1 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c91); }
                                                    }
                                                    if (s1 !== peg$FAILED) {
                                                      s2 = peg$parse_();
                                                      if (s2 !== peg$FAILED) {
                                                        s3 = peg$parseExpression();
                                                        if (s3 !== peg$FAILED) {
                                                          peg$savedPos = s0;
                                                          s1 = peg$c92(s3);
                                                          s0 = s1;
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s0;
                                                      s0 = peg$FAILED;
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = peg$currPos;
                                                      if (input.substr(peg$currPos, 9) === peg$c93) {
                                                        s1 = peg$c93;
                                                        peg$currPos += 9;
                                                      } else {
                                                        s1 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c94); }
                                                      }
                                                      if (s1 !== peg$FAILED) {
                                                        s2 = peg$parseExpression();
                                                        if (s2 !== peg$FAILED) {
                                                          if (input.substr(peg$currPos, 7) === peg$c13) {
                                                            s3 = peg$c13;
                                                            peg$currPos += 7;
                                                          } else {
                                                            s3 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                          }
                                                          if (s3 !== peg$FAILED) {
                                                            peg$savedPos = s0;
                                                            s1 = peg$c95(s2);
                                                            s0 = s1;
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s0;
                                                        s0 = peg$FAILED;
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        s0 = peg$currPos;
                                                        if (input.substr(peg$currPos, 9) === peg$c96) {
                                                          s1 = peg$c96;
                                                          peg$currPos += 9;
                                                        } else {
                                                          s1 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c97); }
                                                        }
                                                        if (s1 !== peg$FAILED) {
                                                          s2 = peg$parseExpression();
                                                          if (s2 !== peg$FAILED) {
                                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                                              s3 = peg$c13;
                                                              peg$currPos += 7;
                                                            } else {
                                                              s3 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                            }
                                                            if (s3 !== peg$FAILED) {
                                                              peg$savedPos = s0;
                                                              s1 = peg$c98(s2);
                                                              s0 = s1;
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s0;
                                                          s0 = peg$FAILED;
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          s0 = peg$currPos;
                                                          if (input.substr(peg$currPos, 10) === peg$c99) {
                                                            s1 = peg$c99;
                                                            peg$currPos += 10;
                                                          } else {
                                                            s1 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c100); }
                                                          }
                                                          if (s1 !== peg$FAILED) {
                                                            s2 = peg$parseExpression();
                                                            if (s2 !== peg$FAILED) {
                                                              s3 = [];
                                                              s4 = peg$currPos;
                                                              if (input.charCodeAt(peg$currPos) === 44) {
                                                                s5 = peg$c73;
                                                                peg$currPos++;
                                                              } else {
                                                                s5 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                              }
                                                              if (s5 !== peg$FAILED) {
                                                                s6 = peg$parseExpression();
                                                                if (s6 !== peg$FAILED) {
                                                                  s5 = [s5, s6];
                                                                  s4 = s5;
                                                                } else {
                                                                  peg$currPos = s4;
                                                                  s4 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s4;
                                                                s4 = peg$FAILED;
                                                              }
                                                              while (s4 !== peg$FAILED) {
                                                                s3.push(s4);
                                                                s4 = peg$currPos;
                                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                                  s5 = peg$c73;
                                                                  peg$currPos++;
                                                                } else {
                                                                  s5 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                }
                                                                if (s5 !== peg$FAILED) {
                                                                  s6 = peg$parseExpression();
                                                                  if (s6 !== peg$FAILED) {
                                                                    s5 = [s5, s6];
                                                                    s4 = s5;
                                                                  } else {
                                                                    peg$currPos = s4;
                                                                    s4 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s4;
                                                                  s4 = peg$FAILED;
                                                                }
                                                              }
                                                              if (s3 !== peg$FAILED) {
                                                                if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                  s4 = peg$c13;
                                                                  peg$currPos += 7;
                                                                } else {
                                                                  s4 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                }
                                                                if (s4 !== peg$FAILED) {
                                                                  peg$savedPos = s0;
                                                                  s1 = peg$c101(s2, s3);
                                                                  s0 = s1;
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s0;
                                                            s0 = peg$FAILED;
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            s0 = peg$currPos;
                                                            if (input.substr(peg$currPos, 10) === peg$c102) {
                                                              s1 = peg$c102;
                                                              peg$currPos += 10;
                                                            } else {
                                                              s1 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c103); }
                                                            }
                                                            if (s1 !== peg$FAILED) {
                                                              s2 = peg$parseExpression();
                                                              if (s2 !== peg$FAILED) {
                                                                s3 = [];
                                                                s4 = peg$currPos;
                                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                                  s5 = peg$c73;
                                                                  peg$currPos++;
                                                                } else {
                                                                  s5 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                }
                                                                if (s5 !== peg$FAILED) {
                                                                  s6 = peg$parseExpression();
                                                                  if (s6 !== peg$FAILED) {
                                                                    s5 = [s5, s6];
                                                                    s4 = s5;
                                                                  } else {
                                                                    peg$currPos = s4;
                                                                    s4 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s4;
                                                                  s4 = peg$FAILED;
                                                                }
                                                                while (s4 !== peg$FAILED) {
                                                                  s3.push(s4);
                                                                  s4 = peg$currPos;
                                                                  if (input.charCodeAt(peg$currPos) === 44) {
                                                                    s5 = peg$c73;
                                                                    peg$currPos++;
                                                                  } else {
                                                                    s5 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                  }
                                                                  if (s5 !== peg$FAILED) {
                                                                    s6 = peg$parseExpression();
                                                                    if (s6 !== peg$FAILED) {
                                                                      s5 = [s5, s6];
                                                                      s4 = s5;
                                                                    } else {
                                                                      peg$currPos = s4;
                                                                      s4 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s4;
                                                                    s4 = peg$FAILED;
                                                                  }
                                                                }
                                                                if (s3 !== peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                    s4 = peg$c13;
                                                                    peg$currPos += 7;
                                                                  } else {
                                                                    s4 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                  }
                                                                  if (s4 !== peg$FAILED) {
                                                                    peg$savedPos = s0;
                                                                    s1 = peg$c104(s2, s3);
                                                                    s0 = s1;
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s0;
                                                              s0 = peg$FAILED;
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              s0 = peg$currPos;
                                                              if (input.substr(peg$currPos, 6) === peg$c105) {
                                                                s1 = peg$c105;
                                                                peg$currPos += 6;
                                                              } else {
                                                                s1 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c106); }
                                                              }
                                                              if (s1 !== peg$FAILED) {
                                                                s2 = peg$parseExpression();
                                                                if (s2 !== peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 7) === peg$c107) {
                                                                    s3 = peg$c107;
                                                                    peg$currPos += 7;
                                                                  } else {
                                                                    s3 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c108); }
                                                                  }
                                                                  if (s3 !== peg$FAILED) {
                                                                    peg$savedPos = s0;
                                                                    s1 = peg$c109(s2);
                                                                    s0 = s1;
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s0;
                                                                s0 = peg$FAILED;
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                s0 = peg$currPos;
                                                                if (input.substr(peg$currPos, 7) === peg$c110) {
                                                                  s1 = peg$c110;
                                                                  peg$currPos += 7;
                                                                } else {
                                                                  s1 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c111); }
                                                                }
                                                                if (s1 !== peg$FAILED) {
                                                                  if (input.charCodeAt(peg$currPos) === 32) {
                                                                    s2 = peg$c112;
                                                                    peg$currPos++;
                                                                  } else {
                                                                    s2 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c113); }
                                                                  }
                                                                  if (s2 === peg$FAILED) {
                                                                    s2 = null;
                                                                  }
                                                                  if (s2 !== peg$FAILED) {
                                                                    s3 = peg$parseExpression();
                                                                    if (s3 !== peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 7) === peg$c114) {
                                                                        s4 = peg$c114;
                                                                        peg$currPos += 7;
                                                                      } else {
                                                                        s4 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c115); }
                                                                      }
                                                                      if (s4 !== peg$FAILED) {
                                                                        peg$savedPos = s0;
                                                                        s1 = peg$c116(s3);
                                                                        s0 = s1;
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s0;
                                                                  s0 = peg$FAILED;
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  s0 = peg$currPos;
                                                                  if (input.substr(peg$currPos, 6) === peg$c117) {
                                                                    s1 = peg$c117;
                                                                    peg$currPos += 6;
                                                                  } else {
                                                                    s1 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c118); }
                                                                  }
                                                                  if (s1 !== peg$FAILED) {
                                                                    if (input.charCodeAt(peg$currPos) === 32) {
                                                                      s2 = peg$c112;
                                                                      peg$currPos++;
                                                                    } else {
                                                                      s2 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c113); }
                                                                    }
                                                                    if (s2 === peg$FAILED) {
                                                                      s2 = null;
                                                                    }
                                                                    if (s2 !== peg$FAILED) {
                                                                      s3 = peg$parseExpression();
                                                                      if (s3 !== peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 6) === peg$c119) {
                                                                          s4 = peg$c119;
                                                                          peg$currPos += 6;
                                                                        } else {
                                                                          s4 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c120); }
                                                                        }
                                                                        if (s4 !== peg$FAILED) {
                                                                          peg$savedPos = s0;
                                                                          s1 = peg$c121(s3);
                                                                          s0 = s1;
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s0;
                                                                    s0 = peg$FAILED;
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    s0 = peg$currPos;
                                                                    if (input.substr(peg$currPos, 29) === peg$c122) {
                                                                      s1 = peg$c122;
                                                                      peg$currPos += 29;
                                                                    } else {
                                                                      s1 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c123); }
                                                                    }
                                                                    if (s1 !== peg$FAILED) {
                                                                      s2 = peg$parseExpression();
                                                                      if (s2 !== peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                          s3 = peg$c13;
                                                                          peg$currPos += 7;
                                                                        } else {
                                                                          s3 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                        }
                                                                        if (s3 !== peg$FAILED) {
                                                                          peg$savedPos = s0;
                                                                          s1 = peg$c124(s2);
                                                                          s0 = s1;
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s0;
                                                                      s0 = peg$FAILED;
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      s0 = peg$currPos;
                                                                      if (input.substr(peg$currPos, 15) === peg$c125) {
                                                                        s1 = peg$c125;
                                                                        peg$currPos += 15;
                                                                      } else {
                                                                        s1 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c126); }
                                                                      }
                                                                      if (s1 !== peg$FAILED) {
                                                                        s2 = peg$parseExpression();
                                                                        if (s2 !== peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                            s3 = peg$c13;
                                                                            peg$currPos += 7;
                                                                          } else {
                                                                            s3 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                          }
                                                                          if (s3 !== peg$FAILED) {
                                                                            peg$savedPos = s0;
                                                                            s1 = peg$c127(s2);
                                                                            s0 = s1;
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s0;
                                                                        s0 = peg$FAILED;
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        s0 = peg$currPos;
                                                                        if (input.substr(peg$currPos, 15) === peg$c128) {
                                                                          s1 = peg$c128;
                                                                          peg$currPos += 15;
                                                                        } else {
                                                                          s1 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c129); }
                                                                        }
                                                                        if (s1 !== peg$FAILED) {
                                                                          s2 = peg$parseExpression();
                                                                          if (s2 !== peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                              s3 = peg$c13;
                                                                              peg$currPos += 7;
                                                                            } else {
                                                                              s3 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                            }
                                                                            if (s3 !== peg$FAILED) {
                                                                              peg$savedPos = s0;
                                                                              s1 = peg$c130(s2);
                                                                              s0 = s1;
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s0;
                                                                          s0 = peg$FAILED;
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          s0 = peg$currPos;
                                                                          if (input.substr(peg$currPos, 15) === peg$c131) {
                                                                            s1 = peg$c131;
                                                                            peg$currPos += 15;
                                                                          } else {
                                                                            s1 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c132); }
                                                                          }
                                                                          if (s1 !== peg$FAILED) {
                                                                            s2 = peg$parseExpression();
                                                                            if (s2 !== peg$FAILED) {
                                                                              if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                s3 = peg$c13;
                                                                                peg$currPos += 7;
                                                                              } else {
                                                                                s3 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                              }
                                                                              if (s3 !== peg$FAILED) {
                                                                                peg$savedPos = s0;
                                                                                s1 = peg$c133(s2);
                                                                                s0 = s1;
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s0;
                                                                            s0 = peg$FAILED;
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            s0 = peg$currPos;
                                                                            if (input.substr(peg$currPos, 17) === peg$c134) {
                                                                              s1 = peg$c134;
                                                                              peg$currPos += 17;
                                                                            } else {
                                                                              s1 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c135); }
                                                                            }
                                                                            if (s1 !== peg$FAILED) {
                                                                              s2 = peg$parseExpression();
                                                                              if (s2 !== peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                  s3 = peg$c13;
                                                                                  peg$currPos += 7;
                                                                                } else {
                                                                                  s3 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                }
                                                                                if (s3 !== peg$FAILED) {
                                                                                  peg$savedPos = s0;
                                                                                  s1 = peg$c136(s2);
                                                                                  s0 = s1;
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s0;
                                                                              s0 = peg$FAILED;
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              s0 = peg$currPos;
                                                                              if (input.substr(peg$currPos, 9) === peg$c137) {
                                                                                s1 = peg$c137;
                                                                                peg$currPos += 9;
                                                                              } else {
                                                                                s1 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c138); }
                                                                              }
                                                                              if (s1 !== peg$FAILED) {
                                                                                s2 = peg$parseExpression();
                                                                                if (s2 !== peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                    s3 = peg$c13;
                                                                                    peg$currPos += 7;
                                                                                  } else {
                                                                                    s3 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                  }
                                                                                  if (s3 !== peg$FAILED) {
                                                                                    peg$savedPos = s0;
                                                                                    s1 = peg$c136(s2);
                                                                                    s0 = s1;
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s0;
                                                                                s0 = peg$FAILED;
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                s0 = peg$currPos;
                                                                                if (input.substr(peg$currPos, 17) === peg$c139) {
                                                                                  s1 = peg$c139;
                                                                                  peg$currPos += 17;
                                                                                } else {
                                                                                  s1 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c140); }
                                                                                }
                                                                                if (s1 !== peg$FAILED) {
                                                                                  s2 = peg$parseExpression();
                                                                                  if (s2 !== peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                      s3 = peg$c13;
                                                                                      peg$currPos += 7;
                                                                                    } else {
                                                                                      s3 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                    }
                                                                                    if (s3 !== peg$FAILED) {
                                                                                      peg$savedPos = s0;
                                                                                      s1 = peg$c141(s2);
                                                                                      s0 = s1;
                                                                                    } else {
                                                                                      peg$currPos = s0;
                                                                                      s0 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s0;
                                                                                  s0 = peg$FAILED;
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  s0 = peg$currPos;
                                                                                  if (input.substr(peg$currPos, 16) === peg$c142) {
                                                                                    s1 = peg$c142;
                                                                                    peg$currPos += 16;
                                                                                  } else {
                                                                                    s1 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c143); }
                                                                                  }
                                                                                  if (s1 !== peg$FAILED) {
                                                                                    s2 = peg$parseExpression();
                                                                                    if (s2 !== peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                        s3 = peg$c13;
                                                                                        peg$currPos += 7;
                                                                                      } else {
                                                                                        s3 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                      }
                                                                                      if (s3 !== peg$FAILED) {
                                                                                        peg$savedPos = s0;
                                                                                        s1 = peg$c144(s2);
                                                                                        s0 = s1;
                                                                                      } else {
                                                                                        peg$currPos = s0;
                                                                                        s0 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s0;
                                                                                      s0 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s0;
                                                                                    s0 = peg$FAILED;
                                                                                  }
                                                                                  if (s0 === peg$FAILED) {
                                                                                    s0 = peg$currPos;
                                                                                    if (input.substr(peg$currPos, 27) === peg$c145) {
                                                                                      s1 = peg$c145;
                                                                                      peg$currPos += 27;
                                                                                    } else {
                                                                                      s1 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c146); }
                                                                                    }
                                                                                    if (s1 !== peg$FAILED) {
                                                                                      s2 = peg$parseFloat();
                                                                                      if (s2 !== peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                          s3 = peg$c13;
                                                                                          peg$currPos += 7;
                                                                                        } else {
                                                                                          s3 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                        }
                                                                                        if (s3 !== peg$FAILED) {
                                                                                          peg$savedPos = s0;
                                                                                          s1 = peg$c147(s2);
                                                                                          s0 = s1;
                                                                                        } else {
                                                                                          peg$currPos = s0;
                                                                                          s0 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s0;
                                                                                        s0 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s0;
                                                                                      s0 = peg$FAILED;
                                                                                    }
                                                                                    if (s0 === peg$FAILED) {
                                                                                      s0 = peg$currPos;
                                                                                      s1 = peg$parseInteger();
                                                                                      if (s1 === peg$FAILED) {
                                                                                        s1 = peg$parseVarAtLargeIdentifier();
                                                                                      }
                                                                                      if (s1 !== peg$FAILED) {
                                                                                        if (input.charCodeAt(peg$currPos) === 33) {
                                                                                          s2 = peg$c148;
                                                                                          peg$currPos++;
                                                                                        } else {
                                                                                          s2 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c149); }
                                                                                        }
                                                                                        if (s2 !== peg$FAILED) {
                                                                                          peg$savedPos = s0;
                                                                                          s1 = peg$c150(s1);
                                                                                          s0 = s1;
                                                                                        } else {
                                                                                          peg$currPos = s0;
                                                                                          s0 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s0;
                                                                                        s0 = peg$FAILED;
                                                                                      }
                                                                                      if (s0 === peg$FAILED) {
                                                                                        s0 = peg$currPos;
                                                                                        if (input.substr(peg$currPos, 25) === peg$c151) {
                                                                                          s1 = peg$c151;
                                                                                          peg$currPos += 25;
                                                                                        } else {
                                                                                          s1 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c152); }
                                                                                        }
                                                                                        if (s1 !== peg$FAILED) {
                                                                                          s2 = peg$parseExpression();
                                                                                          if (s2 !== peg$FAILED) {
                                                                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                              s3 = peg$c13;
                                                                                              peg$currPos += 7;
                                                                                            } else {
                                                                                              s3 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                            }
                                                                                            if (s3 !== peg$FAILED) {
                                                                                              peg$savedPos = s0;
                                                                                              s1 = peg$c153(s2);
                                                                                              s0 = s1;
                                                                                            } else {
                                                                                              peg$currPos = s0;
                                                                                              s0 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s0;
                                                                                            s0 = peg$FAILED;
                                                                                          }
                                                                                        } else {
                                                                                          peg$currPos = s0;
                                                                                          s0 = peg$FAILED;
                                                                                        }
                                                                                        if (s0 === peg$FAILED) {
                                                                                          s0 = peg$currPos;
                                                                                          if (input.substr(peg$currPos, 26) === peg$c154) {
                                                                                            s1 = peg$c154;
                                                                                            peg$currPos += 26;
                                                                                          } else {
                                                                                            s1 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c155); }
                                                                                          }
                                                                                          if (s1 !== peg$FAILED) {
                                                                                            s2 = peg$parseExpression();
                                                                                            if (s2 !== peg$FAILED) {
                                                                                              if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                s3 = peg$c13;
                                                                                                peg$currPos += 7;
                                                                                              } else {
                                                                                                s3 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                              }
                                                                                              if (s3 !== peg$FAILED) {
                                                                                                peg$savedPos = s0;
                                                                                                s1 = peg$c156(s2);
                                                                                                s0 = s1;
                                                                                              } else {
                                                                                                peg$currPos = s0;
                                                                                                s0 = peg$FAILED;
                                                                                              }
                                                                                            } else {
                                                                                              peg$currPos = s0;
                                                                                              s0 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s0;
                                                                                            s0 = peg$FAILED;
                                                                                          }
                                                                                          if (s0 === peg$FAILED) {
                                                                                            s0 = peg$currPos;
                                                                                            if (input.substr(peg$currPos, 24) === peg$c157) {
                                                                                              s1 = peg$c157;
                                                                                              peg$currPos += 24;
                                                                                            } else {
                                                                                              s1 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c158); }
                                                                                            }
                                                                                            if (s1 !== peg$FAILED) {
                                                                                              s2 = peg$parseInteger();
                                                                                              if (s2 !== peg$FAILED) {
                                                                                                if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                  s3 = peg$c13;
                                                                                                  peg$currPos += 7;
                                                                                                } else {
                                                                                                  s3 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                }
                                                                                                if (s3 !== peg$FAILED) {
                                                                                                  peg$savedPos = s0;
                                                                                                  s1 = peg$c159(s2);
                                                                                                  s0 = s1;
                                                                                                } else {
                                                                                                  peg$currPos = s0;
                                                                                                  s0 = peg$FAILED;
                                                                                                }
                                                                                              } else {
                                                                                                peg$currPos = s0;
                                                                                                s0 = peg$FAILED;
                                                                                              }
                                                                                            } else {
                                                                                              peg$currPos = s0;
                                                                                              s0 = peg$FAILED;
                                                                                            }
                                                                                            if (s0 === peg$FAILED) {
                                                                                              s0 = peg$currPos;
                                                                                              if (input.substr(peg$currPos, 23) === peg$c160) {
                                                                                                s1 = peg$c160;
                                                                                                peg$currPos += 23;
                                                                                              } else {
                                                                                                s1 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c161); }
                                                                                              }
                                                                                              if (s1 !== peg$FAILED) {
                                                                                                s2 = peg$parseExpression();
                                                                                                if (s2 !== peg$FAILED) {
                                                                                                  if (input.charCodeAt(peg$currPos) === 44) {
                                                                                                    s3 = peg$c73;
                                                                                                    peg$currPos++;
                                                                                                  } else {
                                                                                                    s3 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                                                  }
                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                    s4 = peg$parse_();
                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 3) === peg$c162) {
                                                                                                        s5 = peg$c162;
                                                                                                        peg$currPos += 3;
                                                                                                      } else {
                                                                                                        s5 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c163); }
                                                                                                      }
                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                        s6 = peg$parse_();
                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                          if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                            s7 = peg$c13;
                                                                                                            peg$currPos += 7;
                                                                                                          } else {
                                                                                                            s7 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                          }
                                                                                                          if (s7 !== peg$FAILED) {
                                                                                                            peg$savedPos = s0;
                                                                                                            s1 = peg$c164(s2);
                                                                                                            s0 = s1;
                                                                                                          } else {
                                                                                                            peg$currPos = s0;
                                                                                                            s0 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s0;
                                                                                                          s0 = peg$FAILED;
                                                                                                        }
                                                                                                      } else {
                                                                                                        peg$currPos = s0;
                                                                                                        s0 = peg$FAILED;
                                                                                                      }
                                                                                                    } else {
                                                                                                      peg$currPos = s0;
                                                                                                      s0 = peg$FAILED;
                                                                                                    }
                                                                                                  } else {
                                                                                                    peg$currPos = s0;
                                                                                                    s0 = peg$FAILED;
                                                                                                  }
                                                                                                } else {
                                                                                                  peg$currPos = s0;
                                                                                                  s0 = peg$FAILED;
                                                                                                }
                                                                                              } else {
                                                                                                peg$currPos = s0;
                                                                                                s0 = peg$FAILED;
                                                                                              }
                                                                                              if (s0 === peg$FAILED) {
                                                                                                s0 = peg$currPos;
                                                                                                if (input.substr(peg$currPos, 23) === peg$c160) {
                                                                                                  s1 = peg$c160;
                                                                                                  peg$currPos += 23;
                                                                                                } else {
                                                                                                  s1 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c161); }
                                                                                                }
                                                                                                if (s1 !== peg$FAILED) {
                                                                                                  s2 = peg$parseExpression();
                                                                                                  if (s2 !== peg$FAILED) {
                                                                                                    if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                      s3 = peg$c13;
                                                                                                      peg$currPos += 7;
                                                                                                    } else {
                                                                                                      s3 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                    }
                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                      peg$savedPos = s0;
                                                                                                      s1 = peg$c165(s2);
                                                                                                      s0 = s1;
                                                                                                    } else {
                                                                                                      peg$currPos = s0;
                                                                                                      s0 = peg$FAILED;
                                                                                                    }
                                                                                                  } else {
                                                                                                    peg$currPos = s0;
                                                                                                    s0 = peg$FAILED;
                                                                                                  }
                                                                                                } else {
                                                                                                  peg$currPos = s0;
                                                                                                  s0 = peg$FAILED;
                                                                                                }
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  s0 = peg$currPos;
                                                                                                  if (input.substr(peg$currPos, 23) === peg$c166) {
                                                                                                    s1 = peg$c166;
                                                                                                    peg$currPos += 23;
                                                                                                  } else {
                                                                                                    s1 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c167); }
                                                                                                  }
                                                                                                  if (s1 !== peg$FAILED) {
                                                                                                    s2 = peg$parseExpression();
                                                                                                    if (s2 !== peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                        s3 = peg$c13;
                                                                                                        peg$currPos += 7;
                                                                                                      } else {
                                                                                                        s3 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                      }
                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                        peg$savedPos = s0;
                                                                                                        s1 = peg$c168(s2);
                                                                                                        s0 = s1;
                                                                                                      } else {
                                                                                                        peg$currPos = s0;
                                                                                                        s0 = peg$FAILED;
                                                                                                      }
                                                                                                    } else {
                                                                                                      peg$currPos = s0;
                                                                                                      s0 = peg$FAILED;
                                                                                                    }
                                                                                                  } else {
                                                                                                    peg$currPos = s0;
                                                                                                    s0 = peg$FAILED;
                                                                                                  }
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    s0 = peg$currPos;
                                                                                                    if (input.substr(peg$currPos, 23) === peg$c166) {
                                                                                                      s1 = peg$c166;
                                                                                                      peg$currPos += 23;
                                                                                                    } else {
                                                                                                      s1 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c167); }
                                                                                                    }
                                                                                                    if (s1 !== peg$FAILED) {
                                                                                                      s2 = peg$parseExpression();
                                                                                                      if (s2 !== peg$FAILED) {
                                                                                                        if (input.charCodeAt(peg$currPos) === 44) {
                                                                                                          s3 = peg$c73;
                                                                                                          peg$currPos++;
                                                                                                        } else {
                                                                                                          s3 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                                                        }
                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                          s4 = peg$parseVarAtLargeIdentifier();
                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                              s5 = peg$c13;
                                                                                                              peg$currPos += 7;
                                                                                                            } else {
                                                                                                              s5 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                            }
                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                              peg$savedPos = s0;
                                                                                                              s1 = peg$c169(s2, s4);
                                                                                                              s0 = s1;
                                                                                                            } else {
                                                                                                              peg$currPos = s0;
                                                                                                              s0 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s0;
                                                                                                            s0 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s0;
                                                                                                          s0 = peg$FAILED;
                                                                                                        }
                                                                                                      } else {
                                                                                                        peg$currPos = s0;
                                                                                                        s0 = peg$FAILED;
                                                                                                      }
                                                                                                    } else {
                                                                                                      peg$currPos = s0;
                                                                                                      s0 = peg$FAILED;
                                                                                                    }
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      s0 = peg$currPos;
                                                                                                      if (input.substr(peg$currPos, 31) === peg$c170) {
                                                                                                        s1 = peg$c170;
                                                                                                        peg$currPos += 31;
                                                                                                      } else {
                                                                                                        s1 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c171); }
                                                                                                      }
                                                                                                      if (s1 !== peg$FAILED) {
                                                                                                        s2 = peg$parseExpression();
                                                                                                        if (s2 !== peg$FAILED) {
                                                                                                          if (input.charCodeAt(peg$currPos) === 44) {
                                                                                                            s3 = peg$c73;
                                                                                                            peg$currPos++;
                                                                                                          } else {
                                                                                                            s3 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                                                          }
                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                            s4 = peg$parseExpression();
                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                              if (input.substr(peg$currPos, 14) === peg$c172) {
                                                                                                                s5 = peg$c172;
                                                                                                                peg$currPos += 14;
                                                                                                              } else {
                                                                                                                s5 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c173); }
                                                                                                              }
                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                s6 = peg$parseExpression();
                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                  if (input.charCodeAt(peg$currPos) === 44) {
                                                                                                                    s7 = peg$c73;
                                                                                                                    peg$currPos++;
                                                                                                                  } else {
                                                                                                                    s7 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                                                                  }
                                                                                                                  if (s7 !== peg$FAILED) {
                                                                                                                    s8 = peg$parseExpression();
                                                                                                                    if (s8 !== peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 14) === peg$c174) {
                                                                                                                        s9 = peg$c174;
                                                                                                                        peg$currPos += 14;
                                                                                                                      } else {
                                                                                                                        s9 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c175); }
                                                                                                                      }
                                                                                                                      if (s9 !== peg$FAILED) {
                                                                                                                        peg$savedPos = s0;
                                                                                                                        s1 = peg$c176(s2, s4, s6, s8);
                                                                                                                        s0 = s1;
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s0;
                                                                                                                    s0 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s0;
                                                                                                                  s0 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s0;
                                                                                                                s0 = peg$FAILED;
                                                                                                              }
                                                                                                            } else {
                                                                                                              peg$currPos = s0;
                                                                                                              s0 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s0;
                                                                                                            s0 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s0;
                                                                                                          s0 = peg$FAILED;
                                                                                                        }
                                                                                                      } else {
                                                                                                        peg$currPos = s0;
                                                                                                        s0 = peg$FAILED;
                                                                                                      }
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        s0 = peg$currPos;
                                                                                                        if (input.substr(peg$currPos, 6) === peg$c177) {
                                                                                                          s1 = peg$c177;
                                                                                                          peg$currPos += 6;
                                                                                                        } else {
                                                                                                          s1 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c178); }
                                                                                                        }
                                                                                                        if (s1 !== peg$FAILED) {
                                                                                                          s2 = peg$parseVarAtLargeIdentifier();
                                                                                                          if (s2 !== peg$FAILED) {
                                                                                                            if (input.charCodeAt(peg$currPos) === 61) {
                                                                                                              s3 = peg$c6;
                                                                                                              peg$currPos++;
                                                                                                            } else {
                                                                                                              s3 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c7); }
                                                                                                            }
                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                              s4 = peg$parseExpression();
                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                if (input.substr(peg$currPos, 2) === peg$c42) {
                                                                                                                  s5 = peg$c42;
                                                                                                                  peg$currPos += 2;
                                                                                                                } else {
                                                                                                                  s5 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c43); }
                                                                                                                }
                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                  s6 = peg$parseVarAtLargeIdentifier();
                                                                                                                  if (s6 === peg$FAILED) {
                                                                                                                    s6 = peg$parseNumber();
                                                                                                                  }
                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 6) === peg$c11) {
                                                                                                                      s7 = peg$c11;
                                                                                                                      peg$currPos += 6;
                                                                                                                    } else {
                                                                                                                      s7 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                                                                                                    }
                                                                                                                    if (s7 !== peg$FAILED) {
                                                                                                                      s8 = peg$parseExpression();
                                                                                                                      if (s8 !== peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                          s9 = peg$c13;
                                                                                                                          peg$currPos += 7;
                                                                                                                        } else {
                                                                                                                          s9 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                        }
                                                                                                                        if (s9 !== peg$FAILED) {
                                                                                                                          peg$savedPos = s0;
                                                                                                                          s1 = peg$c179(s2, s4, s6, s8);
                                                                                                                          s0 = s1;
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s0;
                                                                                                                    s0 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s0;
                                                                                                                  s0 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s0;
                                                                                                                s0 = peg$FAILED;
                                                                                                              }
                                                                                                            } else {
                                                                                                              peg$currPos = s0;
                                                                                                              s0 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s0;
                                                                                                            s0 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s0;
                                                                                                          s0 = peg$FAILED;
                                                                                                        }
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          s0 = peg$currPos;
                                                                                                          if (input.substr(peg$currPos, 6) === peg$c177) {
                                                                                                            s1 = peg$c177;
                                                                                                            peg$currPos += 6;
                                                                                                          } else {
                                                                                                            s1 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c178); }
                                                                                                          }
                                                                                                          if (s1 !== peg$FAILED) {
                                                                                                            s2 = peg$parseVarAtLargeIdentifier();
                                                                                                            if (s2 !== peg$FAILED) {
                                                                                                              if (input.charCodeAt(peg$currPos) === 61) {
                                                                                                                s3 = peg$c6;
                                                                                                                peg$currPos++;
                                                                                                              } else {
                                                                                                                s3 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c7); }
                                                                                                              }
                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                s4 = peg$parseExpression();
                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                  if (input.substr(peg$currPos, 3) === peg$c46) {
                                                                                                                    s5 = peg$c46;
                                                                                                                    peg$currPos += 3;
                                                                                                                  } else {
                                                                                                                    s5 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c47); }
                                                                                                                  }
                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                    s6 = peg$parseExpression();
                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 7) === peg$c37) {
                                                                                                                        s7 = peg$c37;
                                                                                                                        peg$currPos += 7;
                                                                                                                      } else {
                                                                                                                        s7 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c38); }
                                                                                                                      }
                                                                                                                      if (s7 !== peg$FAILED) {
                                                                                                                        s8 = peg$parseExpression();
                                                                                                                        if (s8 !== peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                            s9 = peg$c13;
                                                                                                                            peg$currPos += 7;
                                                                                                                          } else {
                                                                                                                            s9 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                          }
                                                                                                                          if (s9 !== peg$FAILED) {
                                                                                                                            peg$savedPos = s0;
                                                                                                                            s1 = peg$c179(s2, s4, s6, s8);
                                                                                                                            s0 = s1;
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s0;
                                                                                                                    s0 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s0;
                                                                                                                  s0 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s0;
                                                                                                                s0 = peg$FAILED;
                                                                                                              }
                                                                                                            } else {
                                                                                                              peg$currPos = s0;
                                                                                                              s0 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s0;
                                                                                                            s0 = peg$FAILED;
                                                                                                          }
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            s0 = peg$currPos;
                                                                                                            if (input.substr(peg$currPos, 7) === peg$c180) {
                                                                                                              s1 = peg$c180;
                                                                                                              peg$currPos += 7;
                                                                                                            } else {
                                                                                                              s1 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c181); }
                                                                                                            }
                                                                                                            if (s1 !== peg$FAILED) {
                                                                                                              s2 = peg$parseVarAtLargeIdentifier();
                                                                                                              if (s2 !== peg$FAILED) {
                                                                                                                if (input.charCodeAt(peg$currPos) === 61) {
                                                                                                                  s3 = peg$c6;
                                                                                                                  peg$currPos++;
                                                                                                                } else {
                                                                                                                  s3 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c7); }
                                                                                                                }
                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                  s4 = peg$parseExpression();
                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 2) === peg$c42) {
                                                                                                                      s5 = peg$c42;
                                                                                                                      peg$currPos += 2;
                                                                                                                    } else {
                                                                                                                      s5 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c43); }
                                                                                                                    }
                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                      s6 = peg$parseVarAtLargeIdentifier();
                                                                                                                      if (s6 === peg$FAILED) {
                                                                                                                        s6 = peg$parseNumber();
                                                                                                                      }
                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 6) === peg$c11) {
                                                                                                                          s7 = peg$c11;
                                                                                                                          peg$currPos += 6;
                                                                                                                        } else {
                                                                                                                          s7 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                                                                                                        }
                                                                                                                        if (s7 !== peg$FAILED) {
                                                                                                                          s8 = peg$parseExpression();
                                                                                                                          if (s8 !== peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                              s9 = peg$c13;
                                                                                                                              peg$currPos += 7;
                                                                                                                            } else {
                                                                                                                              s9 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                            }
                                                                                                                            if (s9 !== peg$FAILED) {
                                                                                                                              peg$savedPos = s0;
                                                                                                                              s1 = peg$c182(s2, s4, s6, s8);
                                                                                                                              s0 = s1;
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s0;
                                                                                                                    s0 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s0;
                                                                                                                  s0 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s0;
                                                                                                                s0 = peg$FAILED;
                                                                                                              }
                                                                                                            } else {
                                                                                                              peg$currPos = s0;
                                                                                                              s0 = peg$FAILED;
                                                                                                            }
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              s0 = peg$currPos;
                                                                                                              if (input.substr(peg$currPos, 7) === peg$c180) {
                                                                                                                s1 = peg$c180;
                                                                                                                peg$currPos += 7;
                                                                                                              } else {
                                                                                                                s1 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c181); }
                                                                                                              }
                                                                                                              if (s1 !== peg$FAILED) {
                                                                                                                s2 = peg$parseVarAtLargeIdentifier();
                                                                                                                if (s2 !== peg$FAILED) {
                                                                                                                  if (input.charCodeAt(peg$currPos) === 61) {
                                                                                                                    s3 = peg$c6;
                                                                                                                    peg$currPos++;
                                                                                                                  } else {
                                                                                                                    s3 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c7); }
                                                                                                                  }
                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                    s4 = peg$parseExpression();
                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 3) === peg$c46) {
                                                                                                                        s5 = peg$c46;
                                                                                                                        peg$currPos += 3;
                                                                                                                      } else {
                                                                                                                        s5 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c47); }
                                                                                                                      }
                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                        s6 = peg$parseExpression();
                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 7) === peg$c37) {
                                                                                                                            s7 = peg$c37;
                                                                                                                            peg$currPos += 7;
                                                                                                                          } else {
                                                                                                                            s7 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c38); }
                                                                                                                          }
                                                                                                                          if (s7 !== peg$FAILED) {
                                                                                                                            s8 = peg$parseExpression();
                                                                                                                            if (s8 !== peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                                s9 = peg$c13;
                                                                                                                                peg$currPos += 7;
                                                                                                                              } else {
                                                                                                                                s9 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                              }
                                                                                                                              if (s9 !== peg$FAILED) {
                                                                                                                                peg$savedPos = s0;
                                                                                                                                s1 = peg$c182(s2, s4, s6, s8);
                                                                                                                                s0 = s1;
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s0;
                                                                                                                    s0 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s0;
                                                                                                                  s0 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s0;
                                                                                                                s0 = peg$FAILED;
                                                                                                              }
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                s0 = peg$currPos;
                                                                                                                if (input.substr(peg$currPos, 6) === peg$c183) {
                                                                                                                  s1 = peg$c183;
                                                                                                                  peg$currPos += 6;
                                                                                                                } else {
                                                                                                                  s1 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c184); }
                                                                                                                }
                                                                                                                if (s1 !== peg$FAILED) {
                                                                                                                  s2 = peg$parseVarAtLargeIdentifier();
                                                                                                                  if (s2 !== peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 11) === peg$c185) {
                                                                                                                      s3 = peg$c185;
                                                                                                                      peg$currPos += 11;
                                                                                                                    } else {
                                                                                                                      s3 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c186); }
                                                                                                                    }
                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                      s4 = peg$parseExpression();
                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 7) === peg$c37) {
                                                                                                                          s5 = peg$c37;
                                                                                                                          peg$currPos += 7;
                                                                                                                        } else {
                                                                                                                          s5 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c38); }
                                                                                                                        }
                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                          s6 = peg$parseExpression();
                                                                                                                          if (s6 !== peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                              s7 = peg$c13;
                                                                                                                              peg$currPos += 7;
                                                                                                                            } else {
                                                                                                                              s7 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                            }
                                                                                                                            if (s7 !== peg$FAILED) {
                                                                                                                              peg$savedPos = s0;
                                                                                                                              s1 = peg$c187(s2, s4, s6);
                                                                                                                              s0 = s1;
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s0;
                                                                                                                    s0 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s0;
                                                                                                                  s0 = peg$FAILED;
                                                                                                                }
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  s0 = peg$currPos;
                                                                                                                  if (input.substr(peg$currPos, 6) === peg$c183) {
                                                                                                                    s1 = peg$c183;
                                                                                                                    peg$currPos += 6;
                                                                                                                  } else {
                                                                                                                    s1 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c184); }
                                                                                                                  }
                                                                                                                  if (s1 !== peg$FAILED) {
                                                                                                                    s2 = peg$parseVarAtLargeIdentifier();
                                                                                                                    if (s2 !== peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 11) === peg$c185) {
                                                                                                                        s3 = peg$c185;
                                                                                                                        peg$currPos += 11;
                                                                                                                      } else {
                                                                                                                        s3 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c186); }
                                                                                                                      }
                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                        if (input.charCodeAt(peg$currPos) === 43) {
                                                                                                                          s4 = peg$c188;
                                                                                                                          peg$currPos++;
                                                                                                                        } else {
                                                                                                                          s4 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c189); }
                                                                                                                        }
                                                                                                                        if (s4 === peg$FAILED) {
                                                                                                                          if (input.charCodeAt(peg$currPos) === 45) {
                                                                                                                            s4 = peg$c190;
                                                                                                                            peg$currPos++;
                                                                                                                          } else {
                                                                                                                            s4 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c191); }
                                                                                                                          }
                                                                                                                        }
                                                                                                                        if (s4 === peg$FAILED) {
                                                                                                                          s4 = null;
                                                                                                                        }
                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 13) === peg$c192) {
                                                                                                                            s5 = peg$c192;
                                                                                                                            peg$currPos += 13;
                                                                                                                          } else {
                                                                                                                            s5 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c193); }
                                                                                                                          }
                                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                                            s6 = peg$parseExpression();
                                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                                s7 = peg$c13;
                                                                                                                                peg$currPos += 7;
                                                                                                                              } else {
                                                                                                                                s7 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                              }
                                                                                                                              if (s7 !== peg$FAILED) {
                                                                                                                                peg$savedPos = s0;
                                                                                                                                s1 = peg$c194(s2, s4, s6);
                                                                                                                                s0 = s1;
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s0;
                                                                                                                    s0 = peg$FAILED;
                                                                                                                  }
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    s0 = peg$currPos;
                                                                                                                    if (input.substr(peg$currPos, 4) === peg$c195) {
                                                                                                                      s1 = peg$c195;
                                                                                                                      peg$currPos += 4;
                                                                                                                    } else {
                                                                                                                      s1 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c196); }
                                                                                                                    }
                                                                                                                    if (s1 !== peg$FAILED) {
                                                                                                                      s2 = peg$parse_();
                                                                                                                      if (s2 !== peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 2) === peg$c35) {
                                                                                                                          s3 = peg$c35;
                                                                                                                          peg$currPos += 2;
                                                                                                                        } else {
                                                                                                                          s3 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c36); }
                                                                                                                        }
                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                          s4 = peg$parse_();
                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 3) === peg$c46) {
                                                                                                                              s5 = peg$c46;
                                                                                                                              peg$currPos += 3;
                                                                                                                            } else {
                                                                                                                              s5 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c47); }
                                                                                                                            }
                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                              s6 = peg$parse_();
                                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                                if (input.charCodeAt(peg$currPos) === 125) {
                                                                                                                                  s7 = peg$c27;
                                                                                                                                  peg$currPos++;
                                                                                                                                } else {
                                                                                                                                  s7 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                                                                                                }
                                                                                                                                if (s7 !== peg$FAILED) {
                                                                                                                                  s8 = peg$parse_();
                                                                                                                                  if (s8 !== peg$FAILED) {
                                                                                                                                    if (input.substr(peg$currPos, 6) === peg$c11) {
                                                                                                                                      s9 = peg$c11;
                                                                                                                                      peg$currPos += 6;
                                                                                                                                    } else {
                                                                                                                                      s9 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                                                                                                                    }
                                                                                                                                    if (s9 !== peg$FAILED) {
                                                                                                                                      s10 = peg$parseExpression();
                                                                                                                                      if (s10 !== peg$FAILED) {
                                                                                                                                        if (input.substr(peg$currPos, 15) === peg$c197) {
                                                                                                                                          s11 = peg$c197;
                                                                                                                                          peg$currPos += 15;
                                                                                                                                        } else {
                                                                                                                                          s11 = peg$FAILED;
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c198); }
                                                                                                                                        }
                                                                                                                                        if (s11 !== peg$FAILED) {
                                                                                                                                          s12 = peg$parseVarAtLargeIdentifier();
                                                                                                                                          if (s12 !== peg$FAILED) {
                                                                                                                                            peg$savedPos = s0;
                                                                                                                                            s1 = peg$c199(s10, s12);
                                                                                                                                            s0 = s1;
                                                                                                                                          } else {
                                                                                                                                            peg$currPos = s0;
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          peg$currPos = s0;
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s0;
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s0;
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s0;
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s0;
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s0;
                                                                                                                      s0 = peg$FAILED;
                                                                                                                    }
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      s0 = peg$currPos;
                                                                                                                      if (input.substr(peg$currPos, 4) === peg$c195) {
                                                                                                                        s1 = peg$c195;
                                                                                                                        peg$currPos += 4;
                                                                                                                      } else {
                                                                                                                        s1 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c196); }
                                                                                                                      }
                                                                                                                      if (s1 !== peg$FAILED) {
                                                                                                                        s2 = peg$parse_();
                                                                                                                        if (s2 !== peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 2) === peg$c35) {
                                                                                                                            s3 = peg$c35;
                                                                                                                            peg$currPos += 2;
                                                                                                                          } else {
                                                                                                                            s3 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c36); }
                                                                                                                          }
                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                            s4 = peg$parse_();
                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 3) === peg$c46) {
                                                                                                                                s5 = peg$c46;
                                                                                                                                peg$currPos += 3;
                                                                                                                              } else {
                                                                                                                                s5 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c47); }
                                                                                                                              }
                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                s6 = peg$parse_();
                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                  if (input.charCodeAt(peg$currPos) === 125) {
                                                                                                                                    s7 = peg$c27;
                                                                                                                                    peg$currPos++;
                                                                                                                                  } else {
                                                                                                                                    s7 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                                                                                                  }
                                                                                                                                  if (s7 !== peg$FAILED) {
                                                                                                                                    s8 = peg$parse_();
                                                                                                                                    if (s8 !== peg$FAILED) {
                                                                                                                                      if (input.substr(peg$currPos, 6) === peg$c11) {
                                                                                                                                        s9 = peg$c11;
                                                                                                                                        peg$currPos += 6;
                                                                                                                                      } else {
                                                                                                                                        s9 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                                                                                                                      }
                                                                                                                                      if (s9 !== peg$FAILED) {
                                                                                                                                        s10 = peg$parseExpression();
                                                                                                                                        if (s10 !== peg$FAILED) {
                                                                                                                                          if (input.substr(peg$currPos, 16) === peg$c200) {
                                                                                                                                            s11 = peg$c200;
                                                                                                                                            peg$currPos += 16;
                                                                                                                                          } else {
                                                                                                                                            s11 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c201); }
                                                                                                                                          }
                                                                                                                                          if (s11 !== peg$FAILED) {
                                                                                                                                            s12 = peg$parseVarAtLargeIdentifier();
                                                                                                                                            if (s12 !== peg$FAILED) {
                                                                                                                                              if (input.charCodeAt(peg$currPos) === 125) {
                                                                                                                                                s13 = peg$c27;
                                                                                                                                                peg$currPos++;
                                                                                                                                              } else {
                                                                                                                                                s13 = peg$FAILED;
                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                                                                                                              }
                                                                                                                                              if (s13 !== peg$FAILED) {
                                                                                                                                                peg$savedPos = s0;
                                                                                                                                                s1 = peg$c199(s10, s12);
                                                                                                                                                s0 = s1;
                                                                                                                                              } else {
                                                                                                                                                peg$currPos = s0;
                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              peg$currPos = s0;
                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            peg$currPos = s0;
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          peg$currPos = s0;
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s0;
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s0;
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s0;
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s0;
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s0;
                                                                                                                        s0 = peg$FAILED;
                                                                                                                      }
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        s0 = peg$currPos;
                                                                                                                        if (input.substr(peg$currPos, 4) === peg$c195) {
                                                                                                                          s1 = peg$c195;
                                                                                                                          peg$currPos += 4;
                                                                                                                        } else {
                                                                                                                          s1 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c196); }
                                                                                                                        }
                                                                                                                        if (s1 !== peg$FAILED) {
                                                                                                                          s2 = peg$parse_();
                                                                                                                          if (s2 !== peg$FAILED) {
                                                                                                                            if (input.charCodeAt(peg$currPos) === 95) {
                                                                                                                              s3 = peg$c32;
                                                                                                                              peg$currPos++;
                                                                                                                            } else {
                                                                                                                              s3 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c33); }
                                                                                                                            }
                                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                                              if (input.charCodeAt(peg$currPos) === 123) {
                                                                                                                                s4 = peg$c202;
                                                                                                                                peg$currPos++;
                                                                                                                              } else {
                                                                                                                                s4 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c203); }
                                                                                                                              }
                                                                                                                              if (s4 === peg$FAILED) {
                                                                                                                                s4 = null;
                                                                                                                              }
                                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                                s5 = peg$parseExpression();
                                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                                  if (input.charCodeAt(peg$currPos) === 125) {
                                                                                                                                    s6 = peg$c27;
                                                                                                                                    peg$currPos++;
                                                                                                                                  } else {
                                                                                                                                    s6 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                                                                                                  }
                                                                                                                                  if (s6 === peg$FAILED) {
                                                                                                                                    s6 = null;
                                                                                                                                  }
                                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                                    if (input.charCodeAt(peg$currPos) === 94) {
                                                                                                                                      s7 = peg$c39;
                                                                                                                                      peg$currPos++;
                                                                                                                                    } else {
                                                                                                                                      s7 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c40); }
                                                                                                                                    }
                                                                                                                                    if (s7 !== peg$FAILED) {
                                                                                                                                      if (input.charCodeAt(peg$currPos) === 123) {
                                                                                                                                        s8 = peg$c202;
                                                                                                                                        peg$currPos++;
                                                                                                                                      } else {
                                                                                                                                        s8 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c203); }
                                                                                                                                      }
                                                                                                                                      if (s8 === peg$FAILED) {
                                                                                                                                        s8 = null;
                                                                                                                                      }
                                                                                                                                      if (s8 !== peg$FAILED) {
                                                                                                                                        s9 = peg$parseExpression();
                                                                                                                                        if (s9 !== peg$FAILED) {
                                                                                                                                          if (input.charCodeAt(peg$currPos) === 125) {
                                                                                                                                            s10 = peg$c27;
                                                                                                                                            peg$currPos++;
                                                                                                                                          } else {
                                                                                                                                            s10 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                                                                                                          }
                                                                                                                                          if (s10 === peg$FAILED) {
                                                                                                                                            s10 = null;
                                                                                                                                          }
                                                                                                                                          if (s10 !== peg$FAILED) {
                                                                                                                                            if (input.substr(peg$currPos, 6) === peg$c11) {
                                                                                                                                              s11 = peg$c11;
                                                                                                                                              peg$currPos += 6;
                                                                                                                                            } else {
                                                                                                                                              s11 = peg$FAILED;
                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                                                                                                                            }
                                                                                                                                            if (s11 !== peg$FAILED) {
                                                                                                                                              s12 = peg$parseExpression();
                                                                                                                                              if (s12 !== peg$FAILED) {
                                                                                                                                                if (input.substr(peg$currPos, 15) === peg$c197) {
                                                                                                                                                  s13 = peg$c197;
                                                                                                                                                  peg$currPos += 15;
                                                                                                                                                } else {
                                                                                                                                                  s13 = peg$FAILED;
                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c198); }
                                                                                                                                                }
                                                                                                                                                if (s13 !== peg$FAILED) {
                                                                                                                                                  if (input.charCodeAt(peg$currPos) === 123) {
                                                                                                                                                    s14 = peg$c202;
                                                                                                                                                    peg$currPos++;
                                                                                                                                                  } else {
                                                                                                                                                    s14 = peg$FAILED;
                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c203); }
                                                                                                                                                  }
                                                                                                                                                  if (s14 === peg$FAILED) {
                                                                                                                                                    s14 = null;
                                                                                                                                                  }
                                                                                                                                                  if (s14 !== peg$FAILED) {
                                                                                                                                                    s15 = peg$parseVarAtLargeIdentifier();
                                                                                                                                                    if (s15 !== peg$FAILED) {
                                                                                                                                                      if (input.charCodeAt(peg$currPos) === 125) {
                                                                                                                                                        s16 = peg$c27;
                                                                                                                                                        peg$currPos++;
                                                                                                                                                      } else {
                                                                                                                                                        s16 = peg$FAILED;
                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c28); }
                                                                                                                                                      }
                                                                                                                                                      if (s16 === peg$FAILED) {
                                                                                                                                                        s16 = null;
                                                                                                                                                      }
                                                                                                                                                      if (s16 !== peg$FAILED) {
                                                                                                                                                        peg$savedPos = s0;
                                                                                                                                                        s1 = peg$c204(s5, s9, s12, s15);
                                                                                                                                                        s0 = s1;
                                                                                                                                                      } else {
                                                                                                                                                        peg$currPos = s0;
                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                      }
                                                                                                                                                    } else {
                                                                                                                                                      peg$currPos = s0;
                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                    }
                                                                                                                                                  } else {
                                                                                                                                                    peg$currPos = s0;
                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                  }
                                                                                                                                                } else {
                                                                                                                                                  peg$currPos = s0;
                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                }
                                                                                                                                              } else {
                                                                                                                                                peg$currPos = s0;
                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              peg$currPos = s0;
                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            peg$currPos = s0;
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          peg$currPos = s0;
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s0;
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s0;
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s0;
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s0;
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s0;
                                                                                                                          s0 = peg$FAILED;
                                                                                                                        }
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          s0 = peg$currPos;
                                                                                                                          if (input.substr(peg$currPos, 24) === peg$c205) {
                                                                                                                            s1 = peg$c205;
                                                                                                                            peg$currPos += 24;
                                                                                                                          } else {
                                                                                                                            s1 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c206); }
                                                                                                                          }
                                                                                                                          if (s1 !== peg$FAILED) {
                                                                                                                            s2 = peg$parseExpression();
                                                                                                                            if (s2 !== peg$FAILED) {
                                                                                                                              if (input.charCodeAt(peg$currPos) === 44) {
                                                                                                                                s3 = peg$c73;
                                                                                                                                peg$currPos++;
                                                                                                                              } else {
                                                                                                                                s3 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                                                                              }
                                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                                s4 = peg$parseExpression();
                                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                                    s5 = peg$c13;
                                                                                                                                    peg$currPos += 7;
                                                                                                                                  } else {
                                                                                                                                    s5 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                                  }
                                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                                    peg$savedPos = s0;
                                                                                                                                    s1 = peg$c207(s2, s4);
                                                                                                                                    s0 = s1;
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s0;
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s0;
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s0;
                                                                                                                            s0 = peg$FAILED;
                                                                                                                          }
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            s0 = peg$currPos;
                                                                                                                            if (input.substr(peg$currPos, 10) === peg$c208) {
                                                                                                                              s1 = peg$c208;
                                                                                                                              peg$currPos += 10;
                                                                                                                            } else {
                                                                                                                              s1 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c209); }
                                                                                                                            }
                                                                                                                            if (s1 !== peg$FAILED) {
                                                                                                                              s2 = peg$parseExpression();
                                                                                                                              if (s2 !== peg$FAILED) {
                                                                                                                                if (input.charCodeAt(peg$currPos) === 44) {
                                                                                                                                  s3 = peg$c73;
                                                                                                                                  peg$currPos++;
                                                                                                                                } else {
                                                                                                                                  s3 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }
                                                                                                                                }
                                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                                  s4 = peg$parseExpression();
                                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                                    if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                                      s5 = peg$c13;
                                                                                                                                      peg$currPos += 7;
                                                                                                                                    } else {
                                                                                                                                      s5 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                                    }
                                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                                      peg$savedPos = s0;
                                                                                                                                      s1 = peg$c210(s2, s4);
                                                                                                                                      s0 = s1;
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s0;
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s0;
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s0;
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s0;
                                                                                                                              s0 = peg$FAILED;
                                                                                                                            }
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              s0 = peg$currPos;
                                                                                                                              if (input.substr(peg$currPos, 10) === peg$c211) {
                                                                                                                                s1 = peg$c211;
                                                                                                                                peg$currPos += 10;
                                                                                                                              } else {
                                                                                                                                s1 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c212); }
                                                                                                                              }
                                                                                                                              if (s1 !== peg$FAILED) {
                                                                                                                                s2 = peg$parseExpression();
                                                                                                                                if (s2 !== peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                                    s3 = peg$c13;
                                                                                                                                    peg$currPos += 7;
                                                                                                                                  } else {
                                                                                                                                    s3 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                                  }
                                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                                    peg$savedPos = s0;
                                                                                                                                    s1 = peg$c213(s2);
                                                                                                                                    s0 = s1;
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s0;
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s0;
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s0;
                                                                                                                                s0 = peg$FAILED;
                                                                                                                              }
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                s0 = peg$currPos;
                                                                                                                                s1 = peg$parseDeposedFuncName();
                                                                                                                                if (s1 !== peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 6) === peg$c11) {
                                                                                                                                    s2 = peg$c11;
                                                                                                                                    peg$currPos += 6;
                                                                                                                                  } else {
                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c12); }
                                                                                                                                  }
                                                                                                                                  if (s2 !== peg$FAILED) {
                                                                                                                                    s3 = peg$parseExpression();
                                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                                      if (input.substr(peg$currPos, 7) === peg$c13) {
                                                                                                                                        s4 = peg$c13;
                                                                                                                                        peg$currPos += 7;
                                                                                                                                      } else {
                                                                                                                                        s4 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c14); }
                                                                                                                                      }
                                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                                        peg$savedPos = s0;
                                                                                                                                        s1 = peg$c214(s1, s3);
                                                                                                                                        s0 = s1;
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s0;
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s0;
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s0;
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s0;
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseDeposedFuncName() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 20) === peg$c215) {
        s1 = peg$c215;
        peg$currPos += 20;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c216); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c217();
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 20) === peg$c218) {
          s1 = peg$c218;
          peg$currPos += 20;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c219); }
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c220();
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 20) === peg$c221) {
            s1 = peg$c221;
            peg$currPos += 20;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c222); }
          }
          if (s1 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c223();
          }
          s0 = s1;
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 20) === peg$c224) {
              s1 = peg$c224;
              peg$currPos += 20;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c225); }
            }
            if (s1 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c226();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 22) === peg$c227) {
                s1 = peg$c227;
                peg$currPos += 22;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c228); }
              }
              if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c229();
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 22) === peg$c230) {
                  s1 = peg$c230;
                  peg$currPos += 22;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c231); }
                }
                if (s1 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c232();
                }
                s0 = s1;
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  if (input.substr(peg$currPos, 19) === peg$c233) {
                    s1 = peg$c233;
                    peg$currPos += 19;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c234); }
                  }
                  if (s1 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c235();
                  }
                  s0 = s1;
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.substr(peg$currPos, 19) === peg$c236) {
                      s1 = peg$c236;
                      peg$currPos += 19;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c237); }
                    }
                    if (s1 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c238();
                    }
                    s0 = s1;
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      if (input.substr(peg$currPos, 19) === peg$c239) {
                        s1 = peg$c239;
                        peg$currPos += 19;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c240); }
                      }
                      if (s1 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c241();
                      }
                      s0 = s1;
                      if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.substr(peg$currPos, 19) === peg$c242) {
                          s1 = peg$c242;
                          peg$currPos += 19;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c243); }
                        }
                        if (s1 !== peg$FAILED) {
                          peg$savedPos = s0;
                          s1 = peg$c244();
                        }
                        s0 = s1;
                        if (s0 === peg$FAILED) {
                          s0 = peg$currPos;
                          if (input.substr(peg$currPos, 21) === peg$c245) {
                            s1 = peg$c245;
                            peg$currPos += 21;
                          } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c246); }
                          }
                          if (s1 !== peg$FAILED) {
                            peg$savedPos = s0;
                            s1 = peg$c247();
                          }
                          s0 = s1;
                          if (s0 === peg$FAILED) {
                            s0 = peg$currPos;
                            if (input.substr(peg$currPos, 21) === peg$c248) {
                              s1 = peg$c248;
                              peg$currPos += 21;
                            } else {
                              s1 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c249); }
                            }
                            if (s1 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s1 = peg$c250();
                            }
                            s0 = s1;
                            if (s0 === peg$FAILED) {
                              s0 = peg$currPos;
                              if (input.substr(peg$currPos, 21) === peg$c251) {
                                s1 = peg$c251;
                                peg$currPos += 21;
                              } else {
                                s1 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c252); }
                              }
                              if (s1 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c253();
                              }
                              s0 = s1;
                              if (s0 === peg$FAILED) {
                                s0 = peg$currPos;
                                if (input.substr(peg$currPos, 20) === peg$c254) {
                                  s1 = peg$c254;
                                  peg$currPos += 20;
                                } else {
                                  s1 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c255); }
                                }
                                if (s1 !== peg$FAILED) {
                                  peg$savedPos = s0;
                                  s1 = peg$c256();
                                }
                                s0 = s1;
                                if (s0 === peg$FAILED) {
                                  s0 = peg$currPos;
                                  if (input.substr(peg$currPos, 19) === peg$c257) {
                                    s1 = peg$c257;
                                    peg$currPos += 19;
                                  } else {
                                    s1 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c258); }
                                  }
                                  if (s1 !== peg$FAILED) {
                                    peg$savedPos = s0;
                                    s1 = peg$c259();
                                  }
                                  s0 = s1;
                                  if (s0 === peg$FAILED) {
                                    s0 = peg$currPos;
                                    if (input.substr(peg$currPos, 21) === peg$c260) {
                                      s1 = peg$c260;
                                      peg$currPos += 21;
                                    } else {
                                      s1 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c261); }
                                    }
                                    if (s1 !== peg$FAILED) {
                                      peg$savedPos = s0;
                                      s1 = peg$c262();
                                    }
                                    s0 = s1;
                                    if (s0 === peg$FAILED) {
                                      s0 = peg$currPos;
                                      if (input.substr(peg$currPos, 19) === peg$c263) {
                                        s1 = peg$c263;
                                        peg$currPos += 19;
                                      } else {
                                        s1 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c264); }
                                      }
                                      if (s1 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c265();
                                      }
                                      s0 = s1;
                                      if (s0 === peg$FAILED) {
                                        s0 = peg$currPos;
                                        if (input.substr(peg$currPos, 18) === peg$c266) {
                                          s1 = peg$c266;
                                          peg$currPos += 18;
                                        } else {
                                          s1 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c267); }
                                        }
                                        if (s1 !== peg$FAILED) {
                                          peg$savedPos = s0;
                                          s1 = peg$c268();
                                        }
                                        s0 = s1;
                                        if (s0 === peg$FAILED) {
                                          s0 = peg$currPos;
                                          if (input.substr(peg$currPos, 18) === peg$c269) {
                                            s1 = peg$c269;
                                            peg$currPos += 18;
                                          } else {
                                            s1 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c270); }
                                          }
                                          if (s1 !== peg$FAILED) {
                                            peg$savedPos = s0;
                                            s1 = peg$c271();
                                          }
                                          s0 = s1;
                                          if (s0 === peg$FAILED) {
                                            s0 = peg$currPos;
                                            if (input.substr(peg$currPos, 4) === peg$c272) {
                                              s1 = peg$c272;
                                              peg$currPos += 4;
                                            } else {
                                              s1 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c273); }
                                            }
                                            if (s1 !== peg$FAILED) {
                                              peg$savedPos = s0;
                                              s1 = peg$c274();
                                            }
                                            s0 = s1;
                                            if (s0 === peg$FAILED) {
                                              s0 = peg$currPos;
                                              if (input.substr(peg$currPos, 19) === peg$c275) {
                                                s1 = peg$c275;
                                                peg$currPos += 19;
                                              } else {
                                                s1 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c276); }
                                              }
                                              if (s1 !== peg$FAILED) {
                                                peg$savedPos = s0;
                                                s1 = peg$c277();
                                              }
                                              s0 = s1;
                                              if (s0 === peg$FAILED) {
                                                s0 = peg$currPos;
                                                if (input.substr(peg$currPos, 4) === peg$c278) {
                                                  s1 = peg$c278;
                                                  peg$currPos += 4;
                                                } else {
                                                  s1 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c279); }
                                                }
                                                if (s1 !== peg$FAILED) {
                                                  peg$savedPos = s0;
                                                  s1 = peg$c280();
                                                }
                                                s0 = s1;
                                                if (s0 === peg$FAILED) {
                                                  s0 = peg$currPos;
                                                  if (input.substr(peg$currPos, 21) === peg$c281) {
                                                    s1 = peg$c281;
                                                    peg$currPos += 21;
                                                  } else {
                                                    s1 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c282); }
                                                  }
                                                  if (s1 !== peg$FAILED) {
                                                    peg$savedPos = s0;
                                                    s1 = peg$c283();
                                                  }
                                                  s0 = s1;
                                                  if (s0 === peg$FAILED) {
                                                    s0 = peg$currPos;
                                                    if (input.substr(peg$currPos, 20) === peg$c284) {
                                                      s1 = peg$c284;
                                                      peg$currPos += 20;
                                                    } else {
                                                      s1 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c285); }
                                                    }
                                                    if (s1 !== peg$FAILED) {
                                                      peg$savedPos = s0;
                                                      s1 = peg$c286();
                                                    }
                                                    s0 = s1;
                                                    if (s0 === peg$FAILED) {
                                                      s0 = peg$currPos;
                                                      if (input.substr(peg$currPos, 20) === peg$c287) {
                                                        s1 = peg$c287;
                                                        peg$currPos += 20;
                                                      } else {
                                                        s1 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c288); }
                                                      }
                                                      if (s1 !== peg$FAILED) {
                                                        peg$savedPos = s0;
                                                        s1 = peg$c289();
                                                      }
                                                      s0 = s1;
                                                      if (s0 === peg$FAILED) {
                                                        s0 = peg$currPos;
                                                        if (input.substr(peg$currPos, 4) === peg$c290) {
                                                          s1 = peg$c290;
                                                          peg$currPos += 4;
                                                        } else {
                                                          s1 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c291); }
                                                        }
                                                        if (s1 !== peg$FAILED) {
                                                          peg$savedPos = s0;
                                                          s1 = peg$c292();
                                                        }
                                                        s0 = s1;
                                                        if (s0 === peg$FAILED) {
                                                          s0 = peg$currPos;
                                                          if (input.substr(peg$currPos, 19) === peg$c293) {
                                                            s1 = peg$c293;
                                                            peg$currPos += 19;
                                                          } else {
                                                            s1 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c294); }
                                                          }
                                                          if (s1 !== peg$FAILED) {
                                                            peg$savedPos = s0;
                                                            s1 = peg$c295();
                                                          }
                                                          s0 = s1;
                                                          if (s0 === peg$FAILED) {
                                                            s0 = peg$currPos;
                                                            if (input.substr(peg$currPos, 4) === peg$c296) {
                                                              s1 = peg$c296;
                                                              peg$currPos += 4;
                                                            } else {
                                                              s1 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c297); }
                                                            }
                                                            if (s1 !== peg$FAILED) {
                                                              peg$savedPos = s0;
                                                              s1 = peg$c298();
                                                            }
                                                            s0 = s1;
                                                            if (s0 === peg$FAILED) {
                                                              s0 = peg$currPos;
                                                              if (input.substr(peg$currPos, 4) === peg$c296) {
                                                                s1 = peg$c296;
                                                                peg$currPos += 4;
                                                              } else {
                                                                s1 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c297); }
                                                              }
                                                              if (s1 !== peg$FAILED) {
                                                                peg$savedPos = s0;
                                                                s1 = peg$c298();
                                                              }
                                                              s0 = s1;
                                                              if (s0 === peg$FAILED) {
                                                                s0 = peg$currPos;
                                                                if (input.substr(peg$currPos, 3) === peg$c299) {
                                                                  s1 = peg$c299;
                                                                  peg$currPos += 3;
                                                                } else {
                                                                  s1 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c300); }
                                                                }
                                                                if (s1 !== peg$FAILED) {
                                                                  peg$savedPos = s0;
                                                                  s1 = peg$c301();
                                                                }
                                                                s0 = s1;
                                                                if (s0 === peg$FAILED) {
                                                                  s0 = peg$currPos;
                                                                  if (input.substr(peg$currPos, 9) === peg$c302) {
                                                                    s1 = peg$c302;
                                                                    peg$currPos += 9;
                                                                  } else {
                                                                    s1 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c303); }
                                                                  }
                                                                  if (s1 !== peg$FAILED) {
                                                                    peg$savedPos = s0;
                                                                    s1 = peg$c304();
                                                                  }
                                                                  s0 = s1;
                                                                  if (s0 === peg$FAILED) {
                                                                    s0 = peg$currPos;
                                                                    if (input.substr(peg$currPos, 4) === peg$c305) {
                                                                      s1 = peg$c305;
                                                                      peg$currPos += 4;
                                                                    } else {
                                                                      s1 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c306); }
                                                                    }
                                                                    if (s1 !== peg$FAILED) {
                                                                      peg$savedPos = s0;
                                                                      s1 = peg$c301();
                                                                    }
                                                                    s0 = s1;
                                                                    if (s0 === peg$FAILED) {
                                                                      s0 = peg$currPos;
                                                                      if (input.substr(peg$currPos, 4) === peg$c307) {
                                                                        s1 = peg$c307;
                                                                        peg$currPos += 4;
                                                                      } else {
                                                                        s1 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c308); }
                                                                      }
                                                                      if (s1 !== peg$FAILED) {
                                                                        peg$savedPos = s0;
                                                                        s1 = peg$c309();
                                                                      }
                                                                      s0 = s1;
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseContiguousFactors() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseFirstContiguousFactor();
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$currPos;
            s6 = peg$parse_();
            if (s6 !== peg$FAILED) {
              s7 = peg$parseFactor();
              if (s7 !== peg$FAILED) {
                s8 = peg$parse_();
                if (s8 !== peg$FAILED) {
                  s6 = [s6, s7, s8];
                  s5 = s6;
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$currPos;
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseFactor();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      s6 = [s6, s7, s8];
                      s5 = s6;
                    } else {
                      peg$currPos = s5;
                      s5 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s5;
                    s5 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c310(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseFirstContiguousFactor() {
      var s0;

      s0 = peg$parseS4MLObject();
      if (s0 === peg$FAILED) {
        s0 = peg$parseFactor_bracketed();
        if (s0 === peg$FAILED) {
          s0 = peg$parseFraction();
          if (s0 === peg$FAILED) {
            s0 = peg$parseNumber();
          }
        }
      }

      return s0;
    }

    function peg$parseFactor_braced() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 123) {
        s1 = peg$c202;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c203); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseExpression();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 125) {
                s5 = peg$c27;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c28); }
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c311(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseFactor_bracketed() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c11) {
        s1 = peg$c11;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c12); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseExpression();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              if (input.substr(peg$currPos, 7) === peg$c13) {
                s5 = peg$c13;
                peg$currPos += 7;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c14); }
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c312(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseFraction() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c313) {
        s1 = peg$c313;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c314); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseExpression();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c315) {
                s5 = peg$c315;
                peg$currPos += 2;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c316); }
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseExpression();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 125) {
                        s9 = peg$c27;
                        peg$currPos++;
                      } else {
                        s9 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c28); }
                      }
                      if (s9 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c317(s3, s7);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseNumber() {
      var s0;

      s0 = peg$parseFloat();
      if (s0 === peg$FAILED) {
        s0 = peg$parseInteger();
      }

      return s0;
    }

    function peg$parseInteger() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (peg$c318.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c319); }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$c318.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c319); }
            }
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c320(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseFloat() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parseInteger();
      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c321;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c322); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseInteger();
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c323(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseFunctionInstanciation() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 23) === peg$c324) {
          s2 = peg$c324;
          peg$currPos += 23;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c325); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseSet();
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                if (input.substr(peg$currPos, 11) === peg$c185) {
                  s6 = peg$c185;
                  peg$currPos += 11;
                } else {
                  s6 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c186); }
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$parse_();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parseSet();
                    if (s8 !== peg$FAILED) {
                      s9 = peg$parse_();
                      if (s9 !== peg$FAILED) {
                        if (input.substr(peg$currPos, 2) === peg$c42) {
                          s10 = peg$c42;
                          peg$currPos += 2;
                        } else {
                          s10 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c43); }
                        }
                        if (s10 !== peg$FAILED) {
                          s11 = peg$parseFunctionVarDefinition();
                          if (s11 !== peg$FAILED) {
                            if (input.substr(peg$currPos, 7) === peg$c13) {
                              s12 = peg$c13;
                              peg$currPos += 7;
                            } else {
                              s12 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c14); }
                            }
                            if (s12 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s1 = peg$c326(s4, s8, s11);
                              s0 = s1;
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseFunctionVarDefinition() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 123) {
        s1 = peg$c202;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c203); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseVarIdentifier();
        if (s2 === peg$FAILED) {
          s2 = peg$parseVectorIdentifier();
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            if (input.substr(peg$currPos, 7) === peg$c327) {
              s4 = peg$c327;
              peg$currPos += 7;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c328); }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s6 = peg$parseExpression();
                if (s6 === peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 63) {
                    s6 = peg$c329;
                    peg$currPos++;
                  } else {
                    s6 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c330); }
                  }
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$parse_();
                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 125) {
                      s8 = peg$c27;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c28); }
                    }
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c331(s2, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseSet() {
      var s0;

      s0 = peg$parseSetInstanciation();
      if (s0 === peg$FAILED) {
        s0 = peg$parseMathBBSet();
        if (s0 === peg$FAILED) {
          s0 = peg$parseVarIdentifier();
        }
      }

      return s0;
    }

    function peg$parseSetInstanciation() {
      var s0;

      s0 = peg$parseSetInstanciationByBraces();
      if (s0 === peg$FAILED) {
        s0 = peg$parseSetInstanciationByVARNOTHING();
        if (s0 === peg$FAILED) {
          s0 = peg$parseSetInstanciationByHooks();
        }
      }

      return s0;
    }

    function peg$parseSetInstanciationByOperations() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$parseSet();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseOperator_cross();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseSet();
          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseSetInstanciationByBraces() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c332) {
          s2 = peg$c332;
          peg$currPos += 7;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c333); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseS4MLObject();
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$currPos;
                s8 = peg$parse_();
                if (s8 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 44) {
                    s9 = peg$c73;
                    peg$currPos++;
                  } else {
                    s9 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c74); }
                  }
                  if (s9 !== peg$FAILED) {
                    s10 = peg$parse_();
                    if (s10 !== peg$FAILED) {
                      s11 = peg$parseS4MLObject();
                      if (s11 !== peg$FAILED) {
                        s8 = [s8, s9, s10, s11];
                        s7 = s8;
                      } else {
                        peg$currPos = s7;
                        s7 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s7;
                      s7 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s7;
                    s7 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s7;
                  s7 = peg$FAILED;
                }
                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$currPos;
                  s8 = peg$parse_();
                  if (s8 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 44) {
                      s9 = peg$c73;
                      peg$currPos++;
                    } else {
                      s9 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c74); }
                    }
                    if (s9 !== peg$FAILED) {
                      s10 = peg$parse_();
                      if (s10 !== peg$FAILED) {
                        s11 = peg$parseS4MLObject();
                        if (s11 !== peg$FAILED) {
                          s8 = [s8, s9, s10, s11];
                          s7 = s8;
                        } else {
                          peg$currPos = s7;
                          s7 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s7;
                        s7 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s7;
                      s7 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s7;
                    s7 = peg$FAILED;
                  }
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$parse_();
                  if (s7 !== peg$FAILED) {
                    if (input.substr(peg$currPos, 8) === peg$c334) {
                      s8 = peg$c334;
                      peg$currPos += 8;
                    } else {
                      s8 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c335); }
                    }
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c336(s4, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parse_();
        if (s1 !== peg$FAILED) {
          if (input.substr(peg$currPos, 15) === peg$c337) {
            s2 = peg$c337;
            peg$currPos += 15;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c338); }
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$parse_();
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c339();
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parseSetInstanciationByVARNOTHING() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 11) === peg$c340) {
        s1 = peg$c340;
        peg$currPos += 11;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c341); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c342();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseSetInstanciationByHooks() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 91) {
        s1 = peg$c343;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c344); }
      }
      if (s1 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 93) {
          s1 = peg$c345;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c346); }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseExpression();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 44) {
                s5 = peg$c73;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c74); }
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseExpression();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parse_();
                    if (s8 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 93) {
                        s9 = peg$c345;
                        peg$currPos++;
                      } else {
                        s9 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c346); }
                      }
                      if (s9 === peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 91) {
                          s9 = peg$c343;
                          peg$currPos++;
                        } else {
                          s9 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c344); }
                        }
                      }
                      if (s9 !== peg$FAILED) {
                        if (input.substr(peg$currPos, 2) === peg$c35) {
                          s10 = peg$c35;
                          peg$currPos += 2;
                        } else {
                          s10 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c36); }
                        }
                        if (s10 !== peg$FAILED) {
                          s11 = peg$parse_();
                          if (s11 !== peg$FAILED) {
                            s12 = peg$parseMathBBSet();
                            if (s12 === peg$FAILED) {
                              s12 = peg$parseVarIdentifier();
                            }
                            if (s12 !== peg$FAILED) {
                              if (input.charCodeAt(peg$currPos) === 125) {
                                s13 = peg$c27;
                                peg$currPos++;
                              } else {
                                s13 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c28); }
                              }
                              if (s13 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c347(s1, s3, s7, s9, s12);
                                s0 = s1;
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseSetOperator() {
      var s0;

      s0 = peg$parseOperator_union();
      if (s0 === peg$FAILED) {
        s0 = peg$parseOperator_intersection();
        if (s0 === peg$FAILED) {
          s0 = peg$parseOperator_backslash();
          if (s0 === peg$FAILED) {
            s0 = peg$parseOperator_cross();
          }
        }
      }

      return s0;
    }

    function peg$parseVarAtLargeIdentifier() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parseVectorIdentifier();
      if (s1 === peg$FAILED) {
        s1 = peg$parseSpecialChar();
        if (s1 === peg$FAILED) {
          s1 = peg$parseConstant();
          if (s1 === peg$FAILED) {
            s1 = peg$parseVarIdentifier();
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c348(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseFunctionIdentifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$parseVarAtLargeIdentifier();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseFunctionMarker();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c349(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseUndefinedFunctionIdentifier() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parseFunctionIdentifier();
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c350(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseFunctionMarker() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c11) {
        s1 = peg$c11;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c12); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseVarAtLargeIdentifier();
        if (s2 !== peg$FAILED) {
          if (input.substr(peg$currPos, 7) === peg$c13) {
            s3 = peg$c13;
            peg$currPos += 7;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c14); }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c351(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseVectorIdentifier() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 5) === peg$c352) {
        s1 = peg$c352;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c353); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseVarIdentifier();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 125) {
            s3 = peg$c27;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c28); }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c354(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseVarIdentifier() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = peg$parseLetter();
      if (s1 === peg$FAILED) {
        s1 = peg$parseMathBBLetter();
        if (s1 === peg$FAILED) {
          s1 = peg$parseSpecialLetter();
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseIdentifierIndex();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c355(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseIdentifierIndex() {
      var s0;

      s0 = peg$parseSimpleIdentifierIndex();
      if (s0 === peg$FAILED) {
        s0 = peg$parseComplexIdentifierIndex();
      }

      return s0;
    }

    function peg$parseSimpleIdentifierIndex() {
      var s0, s1, s2;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 95) {
        s1 = peg$c32;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c33); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseChar();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c356(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseComplexIdentifierIndex() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 95) {
        s1 = peg$c32;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c33); }
      }
      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 123) {
          s2 = peg$c202;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c203); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseInteger();
          if (s3 === peg$FAILED) {
            s3 = peg$parseChar();
            if (s3 === peg$FAILED) {
              s3 = peg$parseText();
              if (s3 === peg$FAILED) {
                s3 = peg$parseSpecialLetter();
              }
            }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parseIdentifierIndex();
            if (s4 === peg$FAILED) {
              s4 = null;
            }
            if (s4 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 125) {
                s5 = peg$c27;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c28); }
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c357(s3, s4);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseLetter() {
      var s0;

      if (peg$c358.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c359); }
      }

      return s0;
    }

    function peg$parseChar() {
      var s0;

      if (peg$c360.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c361); }
      }

      return s0;
    }

    function peg$parseText() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c362) {
        s1 = peg$c362;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c363); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (peg$c364.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c365); }
        }
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            if (peg$c364.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c365); }
            }
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 125) {
            s3 = peg$c27;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c28); }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c366(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseSpecialLetter() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c367) {
        s1 = peg$c367;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c368); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c369) {
          s1 = peg$c369;
          peg$currPos += 5;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c370); }
        }
        if (s1 === peg$FAILED) {
          if (input.substr(peg$currPos, 6) === peg$c371) {
            s1 = peg$c371;
            peg$currPos += 6;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c372); }
          }
          if (s1 === peg$FAILED) {
            if (input.substr(peg$currPos, 6) === peg$c373) {
              s1 = peg$c373;
              peg$currPos += 6;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c374); }
            }
            if (s1 === peg$FAILED) {
              if (input.substr(peg$currPos, 6) === peg$c375) {
                s1 = peg$c375;
                peg$currPos += 6;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c376); }
              }
              if (s1 === peg$FAILED) {
                if (input.substr(peg$currPos, 6) === peg$c377) {
                  s1 = peg$c377;
                  peg$currPos += 6;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c378); }
                }
                if (s1 === peg$FAILED) {
                  if (input.substr(peg$currPos, 8) === peg$c379) {
                    s1 = peg$c379;
                    peg$currPos += 8;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c380); }
                  }
                  if (s1 === peg$FAILED) {
                    if (input.substr(peg$currPos, 11) === peg$c381) {
                      s1 = peg$c381;
                      peg$currPos += 11;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c382); }
                    }
                    if (s1 === peg$FAILED) {
                      if (input.substr(peg$currPos, 5) === peg$c383) {
                        s1 = peg$c383;
                        peg$currPos += 5;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c384); }
                      }
                      if (s1 === peg$FAILED) {
                        if (input.substr(peg$currPos, 4) === peg$c385) {
                          s1 = peg$c385;
                          peg$currPos += 4;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c386); }
                        }
                        if (s1 === peg$FAILED) {
                          if (input.substr(peg$currPos, 4) === peg$c385) {
                            s1 = peg$c385;
                            peg$currPos += 4;
                          } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c386); }
                          }
                          if (s1 === peg$FAILED) {
                            if (input.substr(peg$currPos, 6) === peg$c387) {
                              s1 = peg$c387;
                              peg$currPos += 6;
                            } else {
                              s1 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c388); }
                            }
                            if (s1 === peg$FAILED) {
                              if (input.substr(peg$currPos, 6) === peg$c389) {
                                s1 = peg$c389;
                                peg$currPos += 6;
                              } else {
                                s1 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c390); }
                              }
                              if (s1 === peg$FAILED) {
                                if (input.substr(peg$currPos, 5) === peg$c391) {
                                  s1 = peg$c391;
                                  peg$currPos += 5;
                                } else {
                                  s1 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c392); }
                                }
                                if (s1 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 6) === peg$c393) {
                                    s1 = peg$c393;
                                    peg$currPos += 6;
                                  } else {
                                    s1 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c394); }
                                  }
                                  if (s1 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 7) === peg$c395) {
                                      s1 = peg$c395;
                                      peg$currPos += 7;
                                    } else {
                                      s1 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c396); }
                                    }
                                    if (s1 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 7) === peg$c397) {
                                        s1 = peg$c397;
                                        peg$currPos += 7;
                                      } else {
                                        s1 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c398); }
                                      }
                                      if (s1 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 3) === peg$c399) {
                                          s1 = peg$c399;
                                          peg$currPos += 3;
                                        } else {
                                          s1 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c400); }
                                        }
                                        if (s1 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 3) === peg$c401) {
                                            s1 = peg$c401;
                                            peg$currPos += 3;
                                          } else {
                                            s1 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c402); }
                                          }
                                          if (s1 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 3) === peg$c403) {
                                              s1 = peg$c403;
                                              peg$currPos += 3;
                                            } else {
                                              s1 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c404); }
                                            }
                                            if (s1 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 3) === peg$c405) {
                                                s1 = peg$c405;
                                                peg$currPos += 3;
                                              } else {
                                                s1 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c406); }
                                              }
                                              if (s1 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 3) === peg$c407) {
                                                  s1 = peg$c407;
                                                  peg$currPos += 3;
                                                } else {
                                                  s1 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c408); }
                                                }
                                                if (s1 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 3) === peg$c409) {
                                                    s1 = peg$c409;
                                                    peg$currPos += 3;
                                                  } else {
                                                    s1 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c410); }
                                                  }
                                                  if (s1 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 4) === peg$c411) {
                                                      s1 = peg$c411;
                                                      peg$currPos += 4;
                                                    } else {
                                                      s1 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c412); }
                                                    }
                                                    if (s1 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 6) === peg$c413) {
                                                        s1 = peg$c413;
                                                        peg$currPos += 6;
                                                      } else {
                                                        s1 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c414); }
                                                      }
                                                      if (s1 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 6) === peg$c415) {
                                                          s1 = peg$c415;
                                                          peg$currPos += 6;
                                                        } else {
                                                          s1 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c416); }
                                                        }
                                                        if (s1 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 4) === peg$c417) {
                                                            s1 = peg$c417;
                                                            peg$currPos += 4;
                                                          } else {
                                                            s1 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c418); }
                                                          }
                                                          if (s1 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 8) === peg$c419) {
                                                              s1 = peg$c419;
                                                              peg$currPos += 8;
                                                            } else {
                                                              s1 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c420); }
                                                            }
                                                            if (s1 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 8) === peg$c421) {
                                                                s1 = peg$c421;
                                                                peg$currPos += 8;
                                                              } else {
                                                                s1 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c422); }
                                                              }
                                                              if (s1 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 4) === peg$c423) {
                                                                  s1 = peg$c423;
                                                                  peg$currPos += 4;
                                                                } else {
                                                                  s1 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c424); }
                                                                }
                                                                if (s1 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 4) === peg$c425) {
                                                                    s1 = peg$c425;
                                                                    peg$currPos += 4;
                                                                  } else {
                                                                    s1 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c426); }
                                                                  }
                                                                  if (s1 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 4) === peg$c427) {
                                                                      s1 = peg$c427;
                                                                      peg$currPos += 4;
                                                                    } else {
                                                                      s1 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c428); }
                                                                    }
                                                                    if (s1 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 4) === peg$c429) {
                                                                        s1 = peg$c429;
                                                                        peg$currPos += 4;
                                                                      } else {
                                                                        s1 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c430); }
                                                                      }
                                                                      if (s1 === peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 4) === peg$c431) {
                                                                          s1 = peg$c431;
                                                                          peg$currPos += 4;
                                                                        } else {
                                                                          s1 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c432); }
                                                                        }
                                                                        if (s1 === peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 6) === peg$c433) {
                                                                            s1 = peg$c433;
                                                                            peg$currPos += 6;
                                                                          } else {
                                                                            s1 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c434); }
                                                                          }
                                                                          if (s1 === peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 6) === peg$c435) {
                                                                              s1 = peg$c435;
                                                                              peg$currPos += 6;
                                                                            } else {
                                                                              s1 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c436); }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c437(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseSpecialChar() {
      var s0;

      if (input.substr(peg$currPos, 8) === peg$c438) {
        s0 = peg$c438;
        peg$currPos += 8;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c439); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 9) === peg$c440) {
          s0 = peg$c440;
          peg$currPos += 9;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c441); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 8) === peg$c442) {
            s0 = peg$c442;
            peg$currPos += 8;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c443); }
          }
        }
      }

      return s0;
    }

    function peg$parseMathBBLetter() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 8) === peg$c444) {
        s1 = peg$c444;
        peg$currPos += 8;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c445); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseLetter();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 125) {
            s3 = peg$c27;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c28); }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c446(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseConstant() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parseText();
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c447(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseMathBBSet() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$parseMathBBLetter();
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 95) {
          s3 = peg$c32;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c33); }
        }
        if (s3 !== peg$FAILED) {
          if (peg$c448.test(input.charAt(peg$currPos))) {
            s4 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c449); }
          }
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          if (input.substr(peg$currPos, 2) === peg$c44) {
            s4 = peg$c44;
            peg$currPos += 2;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c45); }
          }
          if (s4 !== peg$FAILED) {
            if (input.substr(peg$currPos, 4) === peg$c450) {
              s5 = peg$c450;
              peg$currPos += 4;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c451); }
            }
            if (s5 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 125) {
                s6 = peg$c27;
                peg$currPos++;
              } else {
                s6 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c28); }
              }
              if (s6 !== peg$FAILED) {
                s4 = [s4, s5, s6];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c452(s1, s2, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseEmptyLine() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$c50;
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c453();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseCommentaryLine() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 35) {
        s1 = peg$c454;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c455); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (input.length > peg$currPos) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c19); }
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          if (input.length > peg$currPos) {
            s3 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c19); }
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c456();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseSeparatorLine() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c457) {
        s1 = peg$c457;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c458); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c459();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseUnprocessedLine() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c460) {
        s1 = peg$c460;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c461); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (input.length > peg$currPos) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c19); }
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          if (input.length > peg$currPos) {
            s3 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c19); }
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c459();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsePrintLine() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 14) === peg$c462) {
        s1 = peg$c462;
        peg$currPos += 14;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c463); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        if (input.length > peg$currPos) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c19); }
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          if (input.length > peg$currPos) {
            s3 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c19); }
          }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c464(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parse__() {
      var s0, s1;

      peg$silentFails++;
      if (input.substr(peg$currPos, 2) === peg$c466) {
        s0 = peg$c466;
        peg$currPos += 2;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c467); }
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c465); }
      }

      return s0;
    }

    function peg$parse_() {
      var s0, s1;

      peg$silentFails++;
      s0 = [];
      if (input.substr(peg$currPos, 2) === peg$c466) {
        s1 = peg$c466;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c467); }
      }
      if (s1 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 32) {
          s1 = peg$c112;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c113); }
        }
      }
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        if (input.substr(peg$currPos, 2) === peg$c466) {
          s1 = peg$c466;
          peg$currPos += 2;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c467); }
        }
        if (s1 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 32) {
            s1 = peg$c112;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c113); }
          }
        }
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c468); }
      }

      return s0;
    }

    function peg$parseOperator_plus() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 43) {
        s1 = peg$c188;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c189); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c469();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_minus() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 45) {
        s1 = peg$c190;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c191); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c470();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_multiply() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c471) {
        s1 = peg$c471;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c472); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c473) {
          s1 = peg$c473;
          peg$currPos += 5;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c474); }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c475();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_divide() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 47) {
        s1 = peg$c476;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c477); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c478();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_modulo() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c479) {
        s1 = peg$c479;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c480); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c481();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_pow() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 94) {
        s1 = peg$c39;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c40); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c482();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_cross() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 7) === peg$c483) {
        s1 = peg$c483;
        peg$currPos += 7;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c484); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c485) {
          s1 = peg$c485;
          peg$currPos += 6;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c486); }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c487();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_union() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c488) {
        s1 = peg$c488;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c489); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c490();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_intersection() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c491) {
        s1 = peg$c491;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c492); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c493();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_backslash() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 10) === peg$c494) {
        s1 = peg$c494;
        peg$currPos += 10;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c495); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c496();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_opposite() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 45) {
        s1 = peg$c190;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c191); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c497();
      }
      s0 = s1;

      return s0;
    }

    function peg$parseOperator_identity() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 43) {
        s1 = peg$c188;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c189); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c498();
      }
      s0 = s1;

      return s0;
    }

      
       let currentlyParsing = false;

       function displayMessageOnOutputScreen(pQuestion, pAnswers) {
          // Sometimes the parsing reconization is triggered twice so the messager displays twice for some reason I didn't found out
          // so I use a boolean currentParsing to avoid this behavior, while waiting to find the cause of this bug and solve it 
          if (currentlyParsing === false) {
             currentlyParsing = true;

             g_s4mCoreMemory.unstoreErroredMathLineInput(options.processedMathLineInput);
             g_outputScreen.removeMessagesOf(options.processedMathLineInput);
             g_outputScreen.displayAnswerMessage([pQuestion, ...pAnswers], options.processedMathLineInput);
          }
       }

       function formatVarAtLargeNameFromS4MLToNerdamer(pS4MLVarName) {
          const retVarName = pS4MLVarName.replace(/\{/g, 'OPNCRL').replace(/\}/g, 'CLSCRL').replace(/\\/g, 'BCKSLSH').replace(/ /g, 'SPACE').replace(/BCKSLSHpi/, 'pi');

          return retVarName;
       }

       function formatVarAtLargeNameFromNerdamerToS4ML(pNerdamerVarName) {
          const retVarName = pNerdamerVarName.replace(/OPNCRL/g, '{').replace(/CLSCRL/g, '}').replace(/BCKSLSH/g, '\\').replace(/SPACE/g, ' ');
          return retVarName;
       }


    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(
        peg$maxFailExpected,
        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
        peg$maxFailPos < input.length
          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
      );
    }
  }

  root.S4MLParser = {
    SyntaxError: peg$SyntaxError,
    parse:       peg$parse
  };
})(this);
